"2022-09-02 00:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25329 ms.
""2022-09-02 00:12:26 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:73, serverValue:203289}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 00:12:26 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:74, serverValue:203644}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 00:12:27 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:72, serverValue:206910}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 00:18:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27577 ms.
""2022-09-02 00:18:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 00:18:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 00:18:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:76, serverValue:206909}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 00:18:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=64660292, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 00:18:52 AEST 2022, lastUpdateTimeNanos=36435339379333}
""2022-09-02 00:18:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 00:18:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:75, serverValue:203373}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 00:18:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=60703917, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 00:18:52 AEST 2022, lastUpdateTimeNanos=36435396271250}
""2022-09-02 00:18:54 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 00:18:54 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:77, serverValue:203734}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 00:18:54 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=56126709, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 00:18:54 AEST 2022, lastUpdateTimeNanos=36437344455375}
""2022-09-02 00:19:04 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:79, serverValue:203737}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 00:19:04 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:78, serverValue:203386}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 00:19:04 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:80, serverValue:206894}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 00:35:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29529 ms.
""2022-09-02 00:35:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 00:52:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33391 ms.
""2022-09-02 00:52:45 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 00:52:45 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 00:52:45 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:81, serverValue:207507}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 00:52:45 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:82, serverValue:203896}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 00:52:45 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=69946792, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 00:52:45 AEST 2022, lastUpdateTimeNanos=36465644408542}
""2022-09-02 00:52:45 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=79518000, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 00:52:45 AEST 2022, lastUpdateTimeNanos=36465644408542}
""2022-09-02 00:52:45 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 01:07:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28750 ms.
""2022-09-02 01:07:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 01:07:48 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 01:07:48 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:83, serverValue:204476}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 01:07:48 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=100324666, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 01:07:48 AEST 2022, lastUpdateTimeNanos=36467555477042}
""2022-09-02 01:07:49 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:85, serverValue:204142}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 01:07:49 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:84, serverValue:204498}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 01:07:49 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:86, serverValue:207646}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 01:24:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33945 ms.
""2022-09-02 01:24:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 01:41:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26346 ms.
""2022-09-02 01:56:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28174 ms.
""2022-09-02 01:56:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 01:56:46 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 01:56:46 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 01:56:46 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:87, serverValue:204897}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 01:56:46 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:88, serverValue:208433}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 01:56:46 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=61388500, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 01:56:46 AEST 2022, lastUpdateTimeNanos=36485759114708}
""2022-09-02 01:56:46 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=56428583, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 01:56:46 AEST 2022, lastUpdateTimeNanos=36485758805750}
""2022-09-02 01:56:46 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 01:56:48 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 02:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24181 ms.
""2022-09-02 02:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 02:12:36 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketWriteException: Exception sending message
	at com.mongodb.internal.connection.InternalStreamConnection.translateWriteException(InternalStreamConnection.java:684)
	at com.mongodb.internal.connection.InternalStreamConnection.sendMessage(InternalStreamConnection.java:555)
	at com.mongodb.internal.connection.InternalStreamConnection.sendCommandMessage(InternalStreamConnection.java:381)
	at com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:329)
	at com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:101)
	at com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:45)
	at com.mongodb.internal.connection.InternalStreamConnectionInitializer.initializeConnectionDescription(InternalStreamConnectionInitializer.java:131)
	at com.mongodb.internal.connection.InternalStreamConnectionInitializer.startHandshake(InternalStreamConnectionInitializer.java:73)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:182)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:193)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:320)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:160)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:111)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1500)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1415)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:450)
	at java.base/sun.security.ssl.SSLSocketImpl.ensureNegotiated(SSLSocketImpl.java:915)
	at java.base/sun.security.ssl.SSLSocketImpl$AppOutputStream.write(SSLSocketImpl.java:1285)
	at com.mongodb.internal.connection.SocketStream.write(SocketStream.java:99)
	at com.mongodb.internal.connection.InternalStreamConnection.sendMessage(InternalStreamConnection.java:552)
	... 10 common frames omitted
"2022-09-02 02:12:37 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:91, serverValue:205141}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 02:12:37 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:90, serverValue:205501}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 02:12:37 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:92, serverValue:208680}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 02:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33927 ms.
""2022-09-02 02:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 02:46:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30639 ms.
""2022-09-02 02:46:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 02:46:56 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:93, serverValue:206009}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 02:46:56 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=96769834, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 02:46:56 AEST 2022, lastUpdateTimeNanos=36499363818500}
""2022-09-02 03:02:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33251 ms.
""2022-09-02 03:02:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 03:02:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 03:02:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 03:02:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:94, serverValue:205888}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 03:02:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=95012125, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 03:02:37 AEST 2022, lastUpdateTimeNanos=36505946588958}
""2022-09-02 03:02:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:95, serverValue:209368}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 03:02:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=85979000, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 03:02:37 AEST 2022, lastUpdateTimeNanos=36505969821708}
""2022-09-02 03:02:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 03:19:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33174 ms.
""2022-09-02 03:19:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 03:19:09 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:96, serverValue:206141}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 03:19:09 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:97, serverValue:206497}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 03:19:09 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:98, serverValue:209654}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 03:35:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34899 ms.
""2022-09-02 03:35:24 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 03:35:24 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:99, serverValue:206742}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 03:35:24 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=70019792, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 03:35:23 AEST 2022, lastUpdateTimeNanos=36519476908709}
""2022-09-02 03:50:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24122 ms.
""2022-09-02 03:50:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 04:06:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28714 ms.
""2022-09-02 04:06:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 04:06:34 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 04:06:34 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 04:06:35 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:100, serverValue:206837}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 04:06:35 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=77342000, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 04:06:34 AEST 2022, lastUpdateTimeNanos=36526071172667}
""2022-09-02 04:06:35 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:101, serverValue:210368}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 04:06:35 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=92564833, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 04:06:35 AEST 2022, lastUpdateTimeNanos=36526098071500}
""2022-09-02 04:06:35 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 04:21:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32126 ms.
""2022-09-02 04:21:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 04:21:34 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:102, serverValue:207068}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 04:21:34 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:104, serverValue:210529}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 04:21:34 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:103, serverValue:207429}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 04:21:42 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 04:21:42 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:105, serverValue:207434}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 04:21:42 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=215768459, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 04:21:42 AEST 2022, lastUpdateTimeNanos=36539735915000}
""2022-09-02 04:38:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27147 ms.
""2022-09-02 04:38:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 04:38:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 04:38:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 04:38:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:106, serverValue:207298}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 04:38:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=63144417, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 04:38:13 AEST 2022, lastUpdateTimeNanos=36546238844458}
""2022-09-02 04:38:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:107, serverValue:210826}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 04:38:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=56736292, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 04:38:13 AEST 2022, lastUpdateTimeNanos=36546322898708}
""2022-09-02 04:38:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 04:54:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25223 ms.
""2022-09-02 04:54:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 05:11:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34458 ms.
""2022-09-02 05:11:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 05:11:30 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 05:11:30 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:108, serverValue:208706}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 05:11:30 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=62745125, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 05:11:30 AEST 2022, lastUpdateTimeNanos=36559838396458}
""2022-09-02 05:29:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25763 ms.
""2022-09-02 05:29:15 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:109, serverValue:208881}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 05:29:15 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:110, serverValue:212705}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 05:29:15 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:111, serverValue:209215}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 05:46:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31042 ms.
""2022-09-02 05:46:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 05:46:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 05:46:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 05:46:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:113, serverValue:213014}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 05:46:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:112, serverValue:209134}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 05:46:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=63305917, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 05:46:37 AEST 2022, lastUpdateTimeNanos=36566546242833}
""2022-09-02 05:46:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=63340000, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 05:46:37 AEST 2022, lastUpdateTimeNanos=36566546275791}
""2022-09-02 05:46:37 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 06:03:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34222 ms.
""2022-09-02 06:03:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 06:19:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29304 ms.
""2022-09-02 06:19:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 06:19:53 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 06:19:53 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:114, serverValue:209957}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 06:19:53 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=78921375, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 06:19:52 AEST 2022, lastUpdateTimeNanos=36579980647541}
""2022-09-02 06:35:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34842 ms.
""2022-09-02 06:35:50 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:115, serverValue:209847}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 06:35:50 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:116, serverValue:213573}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 06:35:50 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:117, serverValue:210190}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 06:35:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 06:35:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 06:35:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:119, serverValue:213751}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 06:35:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=83962666, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 06:35:52 AEST 2022, lastUpdateTimeNanos=36586673443417}
""2022-09-02 06:35:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 06:35:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:118, serverValue:209853}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 06:35:52 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=95319208, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 06:35:52 AEST 2022, lastUpdateTimeNanos=36586679945542}
""2022-09-02 06:52:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31123 ms.
""2022-09-02 06:52:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 07:08:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24104 ms.
""2022-09-02 07:08:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 07:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29083 ms.
""2022-09-02 07:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 07:25:46 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 07:25:46 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:120, serverValue:210931}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 07:25:46 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=54076709, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 07:25:46 AEST 2022, lastUpdateTimeNanos=36600148139625}
""2022-09-02 07:42:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25821 ms.
""2022-09-02 07:42:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 07:42:12 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:123, serverValue:211212}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 07:42:12 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:122, serverValue:214823}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 07:42:13 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:121, serverValue:210871}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 07:42:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 07:42:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 07:42:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:125, serverValue:210871}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 07:42:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=64747750, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 07:42:13 AEST 2022, lastUpdateTimeNanos=36606780851750}
""2022-09-02 07:42:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:124, serverValue:214824}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 07:42:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=110322500, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 07:42:13 AEST 2022, lastUpdateTimeNanos=36606828074125}
""2022-09-02 07:42:14 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 07:57:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29261 ms.
""2022-09-02 08:13:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31006 ms.
""2022-09-02 08:13:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 08:29:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35501 ms.
""2022-09-02 08:29:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 08:29:09 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 08:29:09 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:126, serverValue:211928}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 08:29:09 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=75519917, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 08:29:09 AEST 2022, lastUpdateTimeNanos=36620307329292}
""2022-09-02 08:44:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34230 ms.
""2022-09-02 08:44:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 08:44:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Node -1 disconnected.
""2022-09-02 08:44:49 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:127, serverValue:212159}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 08:44:49 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:128, serverValue:215718}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 08:44:49 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:129, serverValue:211809}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 08:44:49 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 08:44:50 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 08:44:50 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:130, serverValue:211809}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 08:44:50 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=47262333, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 08:44:49 AEST 2022, lastUpdateTimeNanos=36626866313417}
""2022-09-02 08:44:50 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:131, serverValue:215718}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 08:44:50 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=52270916, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 08:44:50 AEST 2022, lastUpdateTimeNanos=36626919645792}
""2022-09-02 08:44:50 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 09:02:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25338 ms.
""2022-09-02 09:02:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 09:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32672 ms.
""2022-09-02 09:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 09:35:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30635 ms.
""2022-09-02 09:35:38 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 09:35:38 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:132, serverValue:212952}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 09:35:38 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=65808792, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 09:35:38 AEST 2022, lastUpdateTimeNanos=36641933628209}
""2022-09-02 09:53:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27177 ms.
""2022-09-02 09:53:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 09:53:23 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 09:53:23 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 09:53:23 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:133, serverValue:216811}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 09:53:23 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:134, serverValue:212892}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 09:53:23 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=66706208, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 09:53:23 AEST 2022, lastUpdateTimeNanos=36647183378250}
""2022-09-02 09:53:23 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=68105458, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 09:53:23 AEST 2022, lastUpdateTimeNanos=36647184868708}
""2022-09-02 09:53:23 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 09:53:24 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:135, serverValue:213235}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 09:53:24 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:136, serverValue:216849}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 09:53:24 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:137, serverValue:212893}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 10:09:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30578 ms.
""2022-09-02 10:09:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33261 ms.
""2022-09-02 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:25:49 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 10:25:49 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:138, serverValue:213720}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 10:25:49 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=51549042, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 10:25:49 AEST 2022, lastUpdateTimeNanos=36662039976667}
""2022-09-02 10:25:58 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 10:25:58 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 10:25:58 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:140, serverValue:217105}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 10:25:58 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:139, serverValue:213378}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 10:25:58 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=65858625, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 10:25:58 AEST 2022, lastUpdateTimeNanos=36667360868792}
""2022-09-02 10:25:58 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=53601584, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 10:25:58 AEST 2022, lastUpdateTimeNanos=36667360868750}
""2022-09-02 10:25:58 [cluster-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 10:26:00 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:143, serverValue:213727}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 10:26:00 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:142, serverValue:215444}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 10:26:00 [cluster-rtt-ClusterId{value='63106339d020ba743c10bfb5', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:141, serverValue:213381}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 10:26:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33681 ms.
""2022-09-02 10:26:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:26:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31006 ms.
""2022-09-02 10:26:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:27:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:27:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34794 ms.
""2022-09-02 10:27:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:27:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26180 ms.
""2022-09-02 10:27:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:28:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26024 ms.
""2022-09-02 10:28:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:28:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:28:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35007 ms.
""2022-09-02 10:28:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:29:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25267 ms.
""2022-09-02 10:29:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:29:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33251 ms.
""2022-09-02 10:29:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:30:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:30:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35407 ms.
""2022-09-02 10:30:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:31:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33564 ms.
""2022-09-02 10:31:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:31:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31970 ms.
""2022-09-02 10:31:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:32:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:32:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35942 ms.
""2022-09-02 10:32:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:32:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:32:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35892 ms.
""2022-09-02 10:32:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:33:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:33:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34985 ms.
""2022-09-02 10:33:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:34:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:34:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32285 ms.
""2022-09-02 10:34:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30017 ms.
""2022-09-02 10:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:35:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25028 ms.
""2022-09-02 10:35:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:35:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24382 ms.
""2022-09-02 10:35:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:36:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:36:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34072 ms.
""2022-09-02 10:36:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:36:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:36:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30943 ms.
""2022-09-02 10:36:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:37:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:37:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34393 ms.
""2022-09-02 10:37:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:37:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:37:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35738 ms.
""2022-09-02 10:37:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:38:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27450 ms.
""2022-09-02 10:38:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:38:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28786 ms.
""2022-09-02 10:38:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31227 ms.
""2022-09-02 10:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:39:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28029 ms.
""2022-09-02 10:39:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:40:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:40:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32542 ms.
""2022-09-02 10:40:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:40:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35464 ms.
""2022-09-02 10:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:41:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34126 ms.
""2022-09-02 10:41:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:42:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:42:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35891 ms.
""2022-09-02 10:42:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:42:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33550 ms.
""2022-09-02 10:42:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:43:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:43:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34606 ms.
""2022-09-02 10:43:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34086 ms.
""2022-09-02 10:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:44:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29266 ms.
""2022-09-02 10:44:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28366 ms.
""2022-09-02 10:44:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:45:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:45:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31493 ms.
""2022-09-02 10:45:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:46:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:46:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35560 ms.
""2022-09-02 10:46:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:46:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35372 ms.
""2022-09-02 10:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:47:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34669 ms.
""2022-09-02 10:47:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:47:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27380 ms.
""2022-09-02 10:47:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:48:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:48:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33116 ms.
""2022-09-02 10:48:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27827 ms.
""2022-09-02 10:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:49:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:49:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33666 ms.
""2022-09-02 10:49:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:49:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:49:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33188 ms.
""2022-09-02 10:49:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:50:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24945 ms.
""2022-09-02 10:50:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:50:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24023 ms.
""2022-09-02 10:50:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:51:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29007 ms.
""2022-09-02 10:51:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:51:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26565 ms.
""2022-09-02 10:51:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:52:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32503 ms.
""2022-09-02 10:52:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:52:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28016 ms.
""2022-09-02 10:52:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:53:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:53:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35223 ms.
""2022-09-02 10:53:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:53:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29854 ms.
""2022-09-02 10:53:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:54:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33772 ms.
""2022-09-02 10:54:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:55:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:55:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34471 ms.
""2022-09-02 10:55:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:55:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30591 ms.
""2022-09-02 10:55:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:56:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:56:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35135 ms.
""2022-09-02 10:56:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:56:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29203 ms.
""2022-09-02 10:56:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:57:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:57:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34431 ms.
""2022-09-02 10:57:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 10:57:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 10:57:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34502 ms.
""2022-09-02 10:57:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:00:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26802 ms.
""2022-09-02 11:00:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:00:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:01:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35509 ms.
""2022-09-02 11:01:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:01:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28510 ms.
""2022-09-02 11:01:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:02:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29577 ms.
""2022-09-02 11:02:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:02:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28137 ms.
""2022-09-02 11:02:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:02:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26128 ms.
""2022-09-02 11:02:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:03:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27435 ms.
""2022-09-02 11:03:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:03:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30433 ms.
""2022-09-02 11:03:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:04:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27464 ms.
""2022-09-02 11:04:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:04:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27441 ms.
""2022-09-02 11:04:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:05:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:05:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34059 ms.
""2022-09-02 11:05:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:05:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25002 ms.
""2022-09-02 11:05:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:06:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29477 ms.
""2022-09-02 11:06:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28807 ms.
""2022-09-02 11:06:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:07:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:07:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35312 ms.
""2022-09-02 11:07:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:08:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:08:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31086 ms.
""2022-09-02 11:08:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:08:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33603 ms.
""2022-09-02 11:08:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:09:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:09:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35935 ms.
""2022-09-02 11:09:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:09:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26647 ms.
""2022-09-02 11:09:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:10:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28079 ms.
""2022-09-02 11:10:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:10:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29523 ms.
""2022-09-02 11:10:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:11:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:11:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34713 ms.
""2022-09-02 11:11:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:11:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31405 ms.
""2022-09-02 11:11:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30761 ms.
""2022-09-02 11:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:12:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29072 ms.
""2022-09-02 11:12:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:13:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29482 ms.
""2022-09-02 11:13:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:13:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24055 ms.
""2022-09-02 11:13:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:14:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29300 ms.
""2022-09-02 11:14:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:14:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29475 ms.
""2022-09-02 11:14:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:15:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31082 ms.
""2022-09-02 11:15:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:15:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:15:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33585 ms.
""2022-09-02 11:15:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28437 ms.
""2022-09-02 11:16:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:16:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27984 ms.
""2022-09-02 11:16:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:17:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:17:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33298 ms.
""2022-09-02 11:17:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:17:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25122 ms.
""2022-09-02 11:17:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:18:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:18:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35525 ms.
""2022-09-02 11:18:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:19:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29480 ms.
""2022-09-02 11:19:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:19:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27032 ms.
""2022-09-02 11:19:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:20:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29962 ms.
""2022-09-02 11:20:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:20:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25520 ms.
""2022-09-02 11:20:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:20:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26540 ms.
""2022-09-02 11:20:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:21:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:21:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35672 ms.
""2022-09-02 11:21:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:22:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25119 ms.
""2022-09-02 11:22:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:22:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26988 ms.
""2022-09-02 11:22:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:22:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27978 ms.
""2022-09-02 11:22:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:23:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27051 ms.
""2022-09-02 11:23:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:23:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26233 ms.
""2022-09-02 11:23:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:24:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:24:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33712 ms.
""2022-09-02 11:24:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:25:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:25:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34375 ms.
""2022-09-02 11:25:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:25:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30721 ms.
""2022-09-02 11:25:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28987 ms.
""2022-09-02 11:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:26:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27875 ms.
""2022-09-02 11:26:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:27:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:27:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35560 ms.
""2022-09-02 11:27:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:27:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28322 ms.
""2022-09-02 11:27:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:28:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24760 ms.
""2022-09-02 11:28:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:28:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33043 ms.
""2022-09-02 11:28:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:29:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32331 ms.
""2022-09-02 11:29:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:29:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26803 ms.
""2022-09-02 11:29:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:30:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24695 ms.
""2022-09-02 11:30:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:30:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28153 ms.
""2022-09-02 11:30:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:31:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30531 ms.
""2022-09-02 11:31:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:31:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28210 ms.
""2022-09-02 11:31:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:32:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29376 ms.
""2022-09-02 11:32:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:32:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25671 ms.
""2022-09-02 11:32:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:33:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:33:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32315 ms.
""2022-09-02 11:33:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:33:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:33:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33134 ms.
""2022-09-02 11:33:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:34:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27493 ms.
""2022-09-02 11:34:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:34:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24316 ms.
""2022-09-02 11:34:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:35:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25266 ms.
""2022-09-02 11:35:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26750 ms.
""2022-09-02 11:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:36:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:36:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31845 ms.
""2022-09-02 11:36:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:36:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25881 ms.
""2022-09-02 11:36:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:36:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26322 ms.
""2022-09-02 11:36:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28633 ms.
""2022-09-02 11:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:37:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27087 ms.
""2022-09-02 11:37:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:38:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30449 ms.
""2022-09-02 11:38:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:38:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27916 ms.
""2022-09-02 11:38:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:39:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35371 ms.
""2022-09-02 11:39:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:40:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28010 ms.
""2022-09-02 11:40:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:40:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30682 ms.
""2022-09-02 11:40:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:41:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29069 ms.
""2022-09-02 11:41:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:41:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29577 ms.
""2022-09-02 11:41:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:42:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29101 ms.
""2022-09-02 11:42:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:42:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29814 ms.
""2022-09-02 11:42:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:43:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26577 ms.
""2022-09-02 11:43:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:43:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33418 ms.
""2022-09-02 11:43:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31413 ms.
""2022-09-02 11:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:44:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26487 ms.
""2022-09-02 11:44:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:45:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29220 ms.
""2022-09-02 11:45:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24628 ms.
""2022-09-02 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:46:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28341 ms.
""2022-09-02 11:46:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:46:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26719 ms.
""2022-09-02 11:46:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:46:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28096 ms.
""2022-09-02 11:46:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:47:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24740 ms.
""2022-09-02 11:47:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:47:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30198 ms.
""2022-09-02 11:47:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:48:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27021 ms.
""2022-09-02 11:48:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:48:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28507 ms.
""2022-09-02 11:48:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:49:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29004 ms.
""2022-09-02 11:49:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:49:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30262 ms.
""2022-09-02 11:49:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:50:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28973 ms.
""2022-09-02 11:50:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29996 ms.
""2022-09-02 11:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:51:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30482 ms.
""2022-09-02 11:51:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:52:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33059 ms.
""2022-09-02 11:52:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:52:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:52:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34124 ms.
""2022-09-02 11:52:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:53:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27598 ms.
""2022-09-02 11:53:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:53:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:53:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34979 ms.
""2022-09-02 11:53:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:54:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30713 ms.
""2022-09-02 11:54:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:54:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32274 ms.
""2022-09-02 11:54:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:55:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28287 ms.
""2022-09-02 11:55:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:55:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28267 ms.
""2022-09-02 11:55:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:56:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24734 ms.
""2022-09-02 11:56:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:56:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30769 ms.
""2022-09-02 11:56:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:57:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34249 ms.
""2022-09-02 11:57:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:57:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30132 ms.
""2022-09-02 11:57:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:58:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32743 ms.
""2022-09-02 11:58:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28276 ms.
""2022-09-02 11:58:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:59:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 11:59:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32421 ms.
""2022-09-02 11:59:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 11:59:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28607 ms.
""2022-09-02 11:59:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:00:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28672 ms.
""2022-09-02 12:00:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:00:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:00:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32208 ms.
""2022-09-02 12:00:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:01:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26853 ms.
""2022-09-02 12:01:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:01:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:01:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31318 ms.
""2022-09-02 12:01:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:02:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27310 ms.
""2022-09-02 12:02:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:02:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27284 ms.
""2022-09-02 12:02:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:03:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25368 ms.
""2022-09-02 12:03:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:03:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:03:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34083 ms.
""2022-09-02 12:03:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:04:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24179 ms.
""2022-09-02 12:04:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:04:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31597 ms.
""2022-09-02 12:04:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:05:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28497 ms.
""2022-09-02 12:05:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:05:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25080 ms.
""2022-09-02 12:05:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:06:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:06:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32908 ms.
""2022-09-02 12:06:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:06:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28141 ms.
""2022-09-02 12:06:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:07:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28525 ms.
""2022-09-02 12:07:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:07:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30469 ms.
""2022-09-02 12:07:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:08:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30650 ms.
""2022-09-02 12:08:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:08:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27920 ms.
""2022-09-02 12:08:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:09:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:09:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32361 ms.
""2022-09-02 12:09:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:10:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:10:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34258 ms.
""2022-09-02 12:10:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:10:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24225 ms.
""2022-09-02 12:10:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:11:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:11:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33278 ms.
""2022-09-02 12:11:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:11:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:11:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33989 ms.
""2022-09-02 12:11:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:12:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24574 ms.
""2022-09-02 12:12:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:12:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25751 ms.
""2022-09-02 12:12:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:13:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35057 ms.
""2022-09-02 12:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:13:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27308 ms.
""2022-09-02 12:13:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:14:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:14:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34426 ms.
""2022-09-02 12:14:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:14:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25739 ms.
""2022-09-02 12:14:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:15:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31005 ms.
""2022-09-02 12:15:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32332 ms.
""2022-09-02 12:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:16:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25698 ms.
""2022-09-02 12:16:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:16:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:16:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34633 ms.
""2022-09-02 12:16:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:17:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:17:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34311 ms.
""2022-09-02 12:17:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:17:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29042 ms.
""2022-09-02 12:17:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:18:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26987 ms.
""2022-09-02 12:18:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:18:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30963 ms.
""2022-09-02 12:18:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:19:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:19:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32081 ms.
""2022-09-02 12:19:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27635 ms.
""2022-09-02 12:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:20:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:20:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35295 ms.
""2022-09-02 12:20:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:21:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:21:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34810 ms.
""2022-09-02 12:21:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:21:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:21:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33347 ms.
""2022-09-02 12:21:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:22:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27225 ms.
""2022-09-02 12:22:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:22:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25677 ms.
""2022-09-02 12:22:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:23:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29762 ms.
""2022-09-02 12:23:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:23:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24138 ms.
""2022-09-02 12:23:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:24:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31201 ms.
""2022-09-02 12:24:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:24:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:24:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34235 ms.
""2022-09-02 12:24:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:25:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34675 ms.
""2022-09-02 12:25:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:25:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27027 ms.
""2022-09-02 12:25:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:26:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26255 ms.
""2022-09-02 12:26:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:26:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24643 ms.
""2022-09-02 12:26:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:27:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25170 ms.
""2022-09-02 12:27:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:27:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24541 ms.
""2022-09-02 12:27:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:27:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26827 ms.
""2022-09-02 12:27:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:28:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:28:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34551 ms.
""2022-09-02 12:28:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:29:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29455 ms.
""2022-09-02 12:29:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:29:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30380 ms.
""2022-09-02 12:29:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:30:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:30:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32425 ms.
""2022-09-02 12:30:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:30:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29765 ms.
""2022-09-02 12:30:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:31:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:31:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35868 ms.
""2022-09-02 12:31:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:31:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30551 ms.
""2022-09-02 12:31:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:32:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31074 ms.
""2022-09-02 12:32:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:32:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:32:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32937 ms.
""2022-09-02 12:32:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:33:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:33:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34491 ms.
""2022-09-02 12:33:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:33:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34521 ms.
""2022-09-02 12:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:34:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32648 ms.
""2022-09-02 12:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:35:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30424 ms.
""2022-09-02 12:35:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:35:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24138 ms.
""2022-09-02 12:35:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:36:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28253 ms.
""2022-09-02 12:36:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:36:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27114 ms.
""2022-09-02 12:36:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:37:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.TimeoutException: Failed to send request after 30000 ms.
"2022-09-02 12:37:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34145 ms.
""2022-09-02 12:37:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error sending fetch request (sessionId=228860756, epoch=INITIAL) to node 0:
"org.apache.kafka.common.errors.DisconnectException: null
"2022-09-02 12:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Revoke previously assigned partitions rest-spring-boot-integration-0
""2022-09-02 12:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions revoked: [rest-spring-boot-integration-0]
""2022-09-02 12:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 12:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 12:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 12:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 12:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 12:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 12:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 12:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 12:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 12:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 12:37:26 [SpringApplicationShutdownHook] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:144, serverValue:219481}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:37:35 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 71623 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 12:37:35 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 12:37:35 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 12:37:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 12:37:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 12:37:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:37:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:37:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:37:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:37:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:37:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:37:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:37:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 103 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 12:37:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 12:37:38 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 12:37:38 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 12:37:38 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 12:37:38 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3275 ms
""2022-09-02 12:37:39 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@41cd406f], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4878196c]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@22c73469], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 12:37:39 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:37:39 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:37:39 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:37:39 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:37:39 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 12:37:39 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:37:40 [cluster-rtt-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:215625}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:37:40 [cluster-rtt-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:215978}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:37:40 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:215625}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:37:40 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:219492}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:37:40 [cluster-rtt-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:219492}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:37:40 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:215978}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:37:40 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=676247333, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 12:37:39 AEST 2022, lastUpdateTimeNanos=44425220887958}
""2022-09-02 12:37:40 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=716789375, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 12:37:39 AEST 2022, lastUpdateTimeNanos=44425220436458}
""2022-09-02 12:37:40 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=672333667, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 12:37:39 AEST 2022, lastUpdateTimeNanos=44425221379333}
""2022-09-02 12:37:40 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:37:40 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:37:40 [cluster-ClusterId{value='63116c739bdb88576f34c8c4', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:37:40 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tweetController': Unsatisfied dependency expressed through field 'producer'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.tweetapp.producer.Producer' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
""2022-09-02 12:37:40 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
""2022-09-02 12:37:40 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
""2022-09-02 12:37:40 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field producer in com.tweetapp.controllers.TweetController required a bean of type 'com.tweetapp.producer.Producer' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.tweetapp.producer.Producer' in your configuration.

""2022-09-02 12:38:22 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 72176 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 12:38:22 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 12:38:22 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 12:38:23 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 12:38:23 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 12:38:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:38:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:38:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:38:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:38:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:38:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:38:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:38:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 12:38:25 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 12:38:25 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 12:38:25 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 12:38:26 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 12:38:26 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2920 ms
""2022-09-02 12:38:26 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:38:26 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@4b7485b4], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2a3e45be]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4d663c3f], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 12:38:26 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:38:26 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:38:26 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:38:27 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 12:38:27 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:38:27 [cluster-rtt-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:215992}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:38:27 [cluster-rtt-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:219462}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:38:27 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:215992}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:38:27 [cluster-rtt-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:215639}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:38:27 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:219462}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:38:27 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:215639}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:38:27 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=731965125, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 12:38:27 AEST 2022, lastUpdateTimeNanos=44472694199833}
""2022-09-02 12:38:27 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=729143250, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 12:38:27 AEST 2022, lastUpdateTimeNanos=44472690426500}
""2022-09-02 12:38:27 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=730106625, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 12:38:27 AEST 2022, lastUpdateTimeNanos=44472690360750}
""2022-09-02 12:38:27 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:38:27 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:38:27 [cluster-ClusterId{value='63116ca29a9403617bd1e345', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:38:28 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tweetController': Unsatisfied dependency expressed through field 'producer'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.tweetapp.producer.Producer' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
""2022-09-02 12:38:28 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
""2022-09-02 12:38:28 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
""2022-09-02 12:38:28 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field producer in com.tweetapp.controllers.TweetController required a bean of type 'com.tweetapp.producer.Producer' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.tweetapp.producer.Producer' in your configuration.

""2022-09-02 12:39:18 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 72961 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 12:39:18 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 12:39:18 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 12:39:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 12:39:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 12:39:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:39:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:39:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:39:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:39:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:39:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:39:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:39:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 12:39:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 12:39:21 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 12:39:21 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 12:39:21 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 12:39:21 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3038 ms
""2022-09-02 12:39:21 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@228b550b], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ac0f751]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6bbbbf2], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 12:39:21 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:39:22 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:39:22 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:39:22 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:39:22 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 12:39:22 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:39:22 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:219465}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:39:22 [cluster-rtt-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:219465}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:39:22 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:215658}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:39:22 [cluster-rtt-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:215658}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:39:22 [cluster-rtt-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:216009}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:39:22 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:216009}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:39:22 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=621743458, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 12:39:22 AEST 2022, lastUpdateTimeNanos=44527862026500}
""2022-09-02 12:39:22 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=621256459, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 12:39:22 AEST 2022, lastUpdateTimeNanos=44527859134458}
""2022-09-02 12:39:22 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=621299375, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 12:39:22 AEST 2022, lastUpdateTimeNanos=44527859176667}
""2022-09-02 12:39:22 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:39:23 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:39:23 [cluster-ClusterId{value='63116cd94d11c306dd7508b6', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:39:23 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@131d638, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22a66575, org.springframework.security.web.context.SecurityContextPersistenceFilter@79a0bf2f, org.springframework.security.web.header.HeaderWriterFilter@7790317e, org.springframework.security.web.authentication.logout.LogoutFilter@381349d6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@254ef4c7, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@15529f50, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4acfc706, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f044b60, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3225b8c8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@219a0794, org.springframework.security.web.session.SessionManagementFilter@5db1619c, org.springframework.security.web.access.ExceptionTranslationFilter@e1fc013, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@34da264f]
""2022-09-02 12:39:24 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 12:39:24 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 12:39:24 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 12:39:24 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 12:39:24 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662086364674
""2022-09-02 12:39:24 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet operation
""2022-09-02 12:39:24 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 12:39:24 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 7.274 seconds (JVM running for 8.138)
""2022-09-02 12:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error while fetching metadata with correlation id 2 : {tweet operation=INVALID_TOPIC_EXCEPTION}
""2022-09-02 12:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Metadata response reported invalid topics [tweet operation]
""2022-09-02 12:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 12:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Consumer exception
"java.lang.IllegalStateException: This error handler cannot process 'org.apache.kafka.common.errors.InvalidTopicException's; no record information is available
	at org.springframework.kafka.listener.DefaultErrorHandler.handleOtherException(DefaultErrorHandler.java:199)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1866)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1319)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.apache.kafka.common.errors.InvalidTopicException: Invalid topics: [tweet operation]
"2022-09-02 12:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator 10.57.129.164:9092 (id: 2147483647 rack: null)
""2022-09-02 12:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 12:39:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 2147483647 due to socket connection setup timeout. The timeout value is 10231 ms.
""2022-09-02 12:39:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Group coordinator 10.57.129.164:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: null.isDisconnected: true. Rediscovery will be attempted.
""2022-09-02 12:39:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 10859 ms.
""2022-09-02 12:40:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 17434 ms.
""2022-09-02 12:40:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30731 ms.
""2022-09-02 12:40:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 12:40:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 12:40:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 12:40:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 12:40:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 12:40:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 12:40:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 12:40:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 12:40:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 12:40:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 12:40:52 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 74185 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 12:40:52 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 12:40:52 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 12:40:52 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 12:40:52 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 12:40:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:40:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:40:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:40:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 0 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:40:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:40:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:40:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:40:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 103 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 12:40:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 12:40:55 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 12:40:55 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 12:40:55 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 12:40:55 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3189 ms
""2022-09-02 12:40:56 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:40:56 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@228b550b], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ac0f751]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6bbbbf2], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 12:40:56 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:40:56 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:40:56 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:40:57 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 12:40:57 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:40:57 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:215689}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:40:57 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:219631}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:40:57 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:216044}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:40:57 [cluster-rtt-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:216044}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:40:57 [cluster-rtt-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:215689}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:40:57 [cluster-rtt-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:219494}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:40:57 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=897762292, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 12:40:57 AEST 2022, lastUpdateTimeNanos=44622555058917}
""2022-09-02 12:40:57 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=897905208, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 12:40:57 AEST 2022, lastUpdateTimeNanos=44622554871458}
""2022-09-02 12:40:57 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=897437084, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 12:40:57 AEST 2022, lastUpdateTimeNanos=44622554406250}
""2022-09-02 12:40:57 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:40:57 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:40:57 [cluster-ClusterId{value='63116d38e2fc127d7fa849ef', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:40:58 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3f89c0e3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b4ad7e3, org.springframework.security.web.context.SecurityContextPersistenceFilter@38450764, org.springframework.security.web.header.HeaderWriterFilter@79a0bf2f, org.springframework.security.web.authentication.logout.LogoutFilter@3cd5c009, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@131d638, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@52b1b9a, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7a9dc7b9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3225b8c8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66d112e5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78a6acae, org.springframework.security.web.session.SessionManagementFilter@5f044b60, org.springframework.security.web.access.ExceptionTranslationFilter@53546d72, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@254ef4c7]
""2022-09-02 12:40:59 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 12:40:59 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 12:40:59 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 12:40:59 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 12:40:59 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662086459470
""2022-09-02 12:40:59 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet operation
""2022-09-02 12:40:59 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 12:40:59 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 7.934 seconds (JVM running for 8.771)
""2022-09-02 12:40:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error while fetching metadata with correlation id 2 : {tweet operation=INVALID_TOPIC_EXCEPTION}
""2022-09-02 12:40:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Metadata response reported invalid topics [tweet operation]
""2022-09-02 12:40:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 12:40:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Consumer exception
"java.lang.IllegalStateException: This error handler cannot process 'org.apache.kafka.common.errors.InvalidTopicException's; no record information is available
	at org.springframework.kafka.listener.DefaultErrorHandler.handleOtherException(DefaultErrorHandler.java:199)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1866)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1319)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.apache.kafka.common.errors.InvalidTopicException: Invalid topics: [tweet operation]
"2022-09-02 12:40:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator 10.57.129.164:9092 (id: 2147483647 rack: null)
""2022-09-02 12:40:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 12:41:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 2147483647 due to socket connection setup timeout. The timeout value is 9226 ms.
""2022-09-02 12:41:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Group coordinator 10.57.129.164:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: null.isDisconnected: true. Rediscovery will be attempted.
""2022-09-02 12:41:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 8180 ms.
""2022-09-02 12:41:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 20762 ms.
""2022-09-02 12:41:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 12:41:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 12:41:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 12:41:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 12:41:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 12:41:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 12:41:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 12:41:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 12:41:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 12:41:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 12:41:54 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 74863 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 12:41:54 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 12:41:54 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 12:41:55 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 12:41:55 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 12:41:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:41:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:41:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:41:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:41:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:41:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:41:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:41:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 84 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 12:41:57 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 12:41:57 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 12:41:57 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 12:41:58 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 12:41:58 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3039 ms
""2022-09-02 12:41:58 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:41:58 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@228b550b], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ac0f751]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6bbbbf2], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 12:41:58 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:41:58 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:41:58 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:41:59 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 12:41:59 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:41:59 [cluster-rtt-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:215721}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:41:59 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:216075}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:41:59 [cluster-rtt-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:219720}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:41:59 [cluster-rtt-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:216075}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:41:59 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:219720}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:41:59 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:215721}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:41:59 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=702053208, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 12:41:59 AEST 2022, lastUpdateTimeNanos=44684588187042}
""2022-09-02 12:41:59 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=700599708, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 12:41:59 AEST 2022, lastUpdateTimeNanos=44684588422750}
""2022-09-02 12:41:59 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=702543292, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 12:41:59 AEST 2022, lastUpdateTimeNanos=44684589496542}
""2022-09-02 12:41:59 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:41:59 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:41:59 [cluster-ClusterId{value='63116d760635d21b7a59a5e8', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:42:00 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3f89c0e3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b4ad7e3, org.springframework.security.web.context.SecurityContextPersistenceFilter@38450764, org.springframework.security.web.header.HeaderWriterFilter@79a0bf2f, org.springframework.security.web.authentication.logout.LogoutFilter@3cd5c009, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@131d638, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@52b1b9a, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7a9dc7b9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3225b8c8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66d112e5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78a6acae, org.springframework.security.web.session.SessionManagementFilter@5f044b60, org.springframework.security.web.access.ExceptionTranslationFilter@53546d72, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@254ef4c7]
""2022-09-02 12:42:01 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 12:42:01 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 12:42:01 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 12:42:01 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 12:42:01 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662086521433
""2022-09-02 12:42:01 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet-operation
""2022-09-02 12:42:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 12:42:01 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 7.297 seconds (JVM running for 8.094)
""2022-09-02 12:42:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Error while fetching metadata with correlation id 2 : {tweet-operation=LEADER_NOT_AVAILABLE}
""2022-09-02 12:42:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 12:42:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator 10.57.129.164:9092 (id: 2147483647 rack: null)
""2022-09-02 12:42:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 12:42:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 2147483647 due to socket connection setup timeout. The timeout value is 10174 ms.
""2022-09-02 12:42:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Group coordinator 10.57.129.164:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: null.isDisconnected: true. Rediscovery will be attempted.
""2022-09-02 12:42:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 11283 ms.
""2022-09-02 12:42:22 [http-nio-8081-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2022-09-02 12:42:22 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Getting all tweets from database
""2022-09-02 12:42:22 [http-nio-8081-exec-2] INFO  com.tweetapp.services.TweetService - Getting all tweets from repository - by TweetService
""2022-09-02 12:42:22 [http-nio-8081-exec-2] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:7, serverValue:219692}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 22753 ms.
""2022-09-02 12:42:47 [http-nio-8081-exec-3] INFO  c.t.controllers.TweetController - Deleting tweet: 1002
""2022-09-02 12:42:47 [http-nio-8081-exec-3] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

""2022-09-02 12:42:47 [http-nio-8081-exec-3] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
""2022-09-02 12:42:47 [http-nio-8081-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 12:42:47 [http-nio-8081-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 12:42:47 [http-nio-8081-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662086567776
""2022-09-02 12:42:47 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 12:42:58 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 10451 ms.
""2022-09-02 12:43:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35041 ms.
""2022-09-02 12:43:17 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node -1 due to request timeout.
""2022-09-02 12:43:17 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight INIT_PRODUCER_ID request with correlation id 2 due to node -1 being disconnected (elapsed time since creation: 30007ms, elapsed time since send: 30007ms, request timeout: 30000ms)
""2022-09-02 12:43:19 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 21431 ms.
""2022-09-02 12:43:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26600 ms.
""2022-09-02 12:43:47 [http-nio-8081-exec-3] ERROR o.s.k.s.LoggingProducerListener - Exception thrown when sending a message with key='null' and payload='delete' to topic tweet-operation:
"org.apache.kafka.common.errors.TimeoutException: Topic tweet-operation not present in metadata after 60000 ms.
"2022-09-02 12:43:53 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33651 ms.
""2022-09-02 12:44:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33362 ms.
""2022-09-02 12:44:24 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 30253 ms.
""2022-09-02 12:44:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25401 ms.
""2022-09-02 12:44:49 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24377 ms.
""2022-09-02 12:45:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25311 ms.
""2022-09-02 12:45:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Node -1 disconnected.
""2022-09-02 12:45:23 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33776 ms.
""2022-09-02 12:45:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31749 ms.
""2022-09-02 12:45:52 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27217 ms.
""2022-09-02 12:46:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28426 ms.
""2022-09-02 12:46:24 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31440 ms.
""2022-09-02 12:46:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33559 ms.
""2022-09-02 12:46:55 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29558 ms.
""2022-09-02 12:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32395 ms.
""2022-09-02 12:47:29 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32734 ms.
""2022-09-02 12:47:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25449 ms.
""2022-09-02 12:47:56 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25764 ms.
""2022-09-02 12:48:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33725 ms.
""2022-09-02 12:48:29 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32049 ms.
""2022-09-02 12:48:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35984 ms.
""2022-09-02 12:48:54 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24313 ms.
""2022-09-02 12:49:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26699 ms.
""2022-09-02 12:49:30 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34718 ms.
""2022-09-02 12:49:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25661 ms.
""2022-09-02 12:50:02 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31198 ms.
""2022-09-02 12:50:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34957 ms.
""2022-09-02 12:50:35 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31536 ms.
""2022-09-02 12:50:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24213 ms.
""2022-09-02 12:51:02 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26714 ms.
""2022-09-02 12:51:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 27299 ms.
""2022-09-02 12:51:34 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31009 ms.
""2022-09-02 12:51:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25881 ms.
""2022-09-02 12:52:05 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29340 ms.
""2022-09-02 12:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 25401 ms.
""2022-09-02 12:52:39 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33801 ms.
""2022-09-02 12:52:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 33892 ms.
""2022-09-02 12:53:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 24512 ms.
""2022-09-02 12:53:12 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 31227 ms.
""2022-09-02 12:53:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 28367 ms.
""2022-09-02 12:53:49 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35941 ms.
""2022-09-02 12:54:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29609 ms.
""2022-09-02 12:54:24 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 34064 ms.
""2022-09-02 12:54:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 29955 ms.
""2022-09-02 12:54:58 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 32892 ms.
""2022-09-02 12:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 35035 ms.
""2022-09-02 12:55:25 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Disconnecting from node 0 due to socket connection setup timeout. The timeout value is 26402 ms.
""2022-09-02 12:55:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 12:55:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 12:55:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 12:55:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 12:55:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 12:55:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 12:55:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 12:55:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 12:55:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 12:55:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 12:55:35 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
""2022-09-02 12:55:51 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 87341 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 12:55:51 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 12:55:51 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 12:55:51 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 12:55:51 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 12:55:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:55:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:55:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:55:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 0 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:55:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:55:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:55:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:55:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 84 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 12:55:54 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 12:55:54 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 12:55:54 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 12:55:54 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 12:55:54 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3049 ms
""2022-09-02 12:55:55 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@2a3e45be], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4d663c3f]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4dbd202d], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 12:55:55 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:55:56 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:55:56 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:55:56 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:55:56 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 12:55:56 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:55:57 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:219855}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:55:57 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:215957}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:55:57 [cluster-rtt-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:215957}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:55:57 [cluster-rtt-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:219855}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:55:57 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=724249791, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 12:55:57 AEST 2022, lastUpdateTimeNanos=45521872356292}
""2022-09-02 12:55:57 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=723950833, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 12:55:57 AEST 2022, lastUpdateTimeNanos=45521874191417}
""2022-09-02 12:55:57 [cluster-rtt-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:216319}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:55:57 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:216319}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:55:57 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=737370250, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 12:55:57 AEST 2022, lastUpdateTimeNanos=45521888967500}
""2022-09-02 12:55:57 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:55:57 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:55:57 [cluster-ClusterId{value='631170bb8c36c37f5d446e58', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:55:57 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2e958589, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f89c0e3, org.springframework.security.web.context.SecurityContextPersistenceFilter@4b1d89bd, org.springframework.security.web.header.HeaderWriterFilter@25b9ada7, org.springframework.security.web.authentication.logout.LogoutFilter@3b59f2d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@770397bc, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@66d112e5, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@b4ad7e3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@45670447, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6778a945, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a9dc7b9, org.springframework.security.web.session.SessionManagementFilter@2f4b8c06, org.springframework.security.web.access.ExceptionTranslationFilter@5db1619c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@328d6cd9]
""2022-09-02 12:55:58 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 12:55:58 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 12:55:58 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 12:55:58 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 12:55:58 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662087358683
""2022-09-02 12:55:58 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet-operation
""2022-09-02 12:55:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 12:55:58 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 7.696 seconds (JVM running for 8.567)
""2022-09-02 12:55:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 12:55:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 12:55:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator ambau001025:9092 (id: 2147483647 rack: null)
""2022-09-02 12:55:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 12:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: need to re-join with the given member-id
""2022-09-02 12:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 12:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully joined group with generation Generation{generationId=10, memberId='consumer-spring-boot-api-consumer-1-d2c62935-94f5-49b5-b6be-2f43921e7a1c', protocol='range'}
""2022-09-02 12:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Finished assignment for group at generation 10: {consumer-spring-boot-api-consumer-1-d2c62935-94f5-49b5-b6be-2f43921e7a1c=Assignment(partitions=[tweet-operation-0])}
""2022-09-02 12:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully synced group in generation Generation{generationId=10, memberId='consumer-spring-boot-api-consumer-1-d2c62935-94f5-49b5-b6be-2f43921e7a1c', protocol='range'}
""2022-09-02 12:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Notifying assignor about the new Assignment(partitions=[tweet-operation-0])
""2022-09-02 12:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Adding newly assigned partitions: tweet-operation-0
""2022-09-02 12:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Found no committed offset for partition tweet-operation-0
""2022-09-02 12:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Found no committed offset for partition tweet-operation-0
""2022-09-02 12:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting offset for partition tweet-operation-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ambau001025:9092 (id: 0 rack: null)], epoch=0}}.
""2022-09-02 12:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions assigned: [tweet-operation-0]
""2022-09-02 12:56:10 [http-nio-8081-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2022-09-02 12:56:10 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Getting all tweets from database
""2022-09-02 12:56:10 [http-nio-8081-exec-2] INFO  com.tweetapp.services.TweetService - Getting all tweets from repository - by TweetService
""2022-09-02 12:56:10 [http-nio-8081-exec-2] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:7, serverValue:219916}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:56:21 [http-nio-8081-exec-3] INFO  c.t.controllers.TweetController - Deleting tweet: 1002
""2022-09-02 12:56:21 [http-nio-8081-exec-3] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

""2022-09-02 12:56:21 [http-nio-8081-exec-3] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
""2022-09-02 12:56:21 [http-nio-8081-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 12:56:21 [http-nio-8081-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 12:56:21 [http-nio-8081-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662087381880
""2022-09-02 12:56:21 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 12:56:21 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 12:56:21 [http-nio-8081-exec-3] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: 1002
""2022-09-02 12:56:22 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1000 with epoch 0
""2022-09-02 12:56:22 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 12:56:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:56:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 0 for partition tweet-operation-0
""2022-09-02 12:56:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:56:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:56:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 0 for partition tweet-operation-0
""2022-09-02 12:56:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:56:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:56:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 0 for partition tweet-operation-0
""2022-09-02 12:56:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:56:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:56:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 0 for partition tweet-operation-0
""2022-09-02 12:56:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:56:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:56:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 0 for partition tweet-operation-0
""2022-09-02 12:56:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:56:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:56:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 0 for partition tweet-operation-0
""2022-09-02 12:56:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:56:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:56:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 0 for partition tweet-operation-0
""2022-09-02 12:56:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:56:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:56:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 0 for partition tweet-operation-0
""2022-09-02 12:56:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:56:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:56:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 0 for partition tweet-operation-0
""2022-09-02 12:56:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:56:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:56:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for tweet-operation-0@0
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:57:19 [http-nio-8081-exec-4] INFO  c.t.controllers.TweetController - Getting all tweets from database
""2022-09-02 12:57:19 [http-nio-8081-exec-4] INFO  com.tweetapp.services.TweetService - Getting all tweets from repository - by TweetService
""2022-09-02 12:58:06 [http-nio-8081-exec-5] INFO  c.t.controllers.TweetController - Deleting tweet: 10002
""2022-09-02 12:58:06 [http-nio-8081-exec-5] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: 10002
""2022-09-02 12:58:06 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 12:58:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:58:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 1 for partition tweet-operation-0
""2022-09-02 12:58:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:58:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:58:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 1 for partition tweet-operation-0
""2022-09-02 12:58:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:58:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:58:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 1 for partition tweet-operation-0
""2022-09-02 12:58:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:58:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:58:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 1 for partition tweet-operation-0
""2022-09-02 12:58:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:58:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:58:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 1 for partition tweet-operation-0
""2022-09-02 12:58:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:58:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:58:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 1 for partition tweet-operation-0
""2022-09-02 12:58:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:58:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:58:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 1 for partition tweet-operation-0
""2022-09-02 12:58:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:58:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:58:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 1 for partition tweet-operation-0
""2022-09-02 12:58:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:58:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:58:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 1 for partition tweet-operation-0
""2022-09-02 12:58:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 12:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for tweet-operation-0@1
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Revoke previously assigned partitions tweet-operation-0
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions revoked: [tweet-operation-0]
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Member consumer-spring-boot-api-consumer-1-d2c62935-94f5-49b5-b6be-2f43921e7a1c sending LeaveGroup request to coordinator ambau001025:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 12:58:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 12:58:59 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
""2022-09-02 12:58:59 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 12:58:59 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 12:58:59 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 12:58:59 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
""2022-09-02 12:59:06 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 90109 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 12:59:06 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 12:59:06 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 12:59:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 12:59:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 12:59:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:59:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:59:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:59:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 0 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:59:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:59:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 12:59:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 12:59:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 12:59:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 12:59:09 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 12:59:09 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 12:59:10 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 12:59:10 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3084 ms
""2022-09-02 12:59:10 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:59:10 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@2a3e45be], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4d663c3f]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4dbd202d], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 12:59:10 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:59:10 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 12:59:10 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:59:11 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 12:59:11 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 12:59:11 [cluster-rtt-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:216011}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:59:11 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:216365}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:59:11 [cluster-rtt-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:219880}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:59:11 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:216011}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 12:59:11 [cluster-rtt-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:216365}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 12:59:12 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:219880}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:59:12 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=868002209, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 12:59:11 AEST 2022, lastUpdateTimeNanos=45716743799792}
""2022-09-02 12:59:12 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=863370250, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 12:59:11 AEST 2022, lastUpdateTimeNanos=45716740394583}
""2022-09-02 12:59:12 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=864936000, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 12:59:11 AEST 2022, lastUpdateTimeNanos=45716739744167}
""2022-09-02 12:59:12 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:59:12 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:59:12 [cluster-ClusterId{value='6311717e0f14200284c5833c', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:59:12 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2539b710, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@770397bc, org.springframework.security.web.context.SecurityContextPersistenceFilter@53546d72, org.springframework.security.web.header.HeaderWriterFilter@e1fc013, org.springframework.security.web.authentication.logout.LogoutFilter@c4e9f79, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5700c028, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@45670447, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@131d638, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79a0bf2f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38450764, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22a66575, org.springframework.security.web.session.SessionManagementFilter@7790317e, org.springframework.security.web.access.ExceptionTranslationFilter@6e0c33a8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@d5b5cbe]
""2022-09-02 12:59:13 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 12:59:13 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 12:59:13 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 12:59:13 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 12:59:13 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662087553604
""2022-09-02 12:59:13 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet-operation
""2022-09-02 12:59:13 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 12:59:13 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 7.505 seconds (JVM running for 8.304)
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator ambau001025:9092 (id: 2147483647 rack: null)
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: need to re-join with the given member-id
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully joined group with generation Generation{generationId=12, memberId='consumer-spring-boot-api-consumer-1-0fc28d76-a600-4f6c-b7f7-4978300ff7be', protocol='range'}
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Finished assignment for group at generation 12: {consumer-spring-boot-api-consumer-1-0fc28d76-a600-4f6c-b7f7-4978300ff7be=Assignment(partitions=[tweet-operation-0])}
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully synced group in generation Generation{generationId=12, memberId='consumer-spring-boot-api-consumer-1-0fc28d76-a600-4f6c-b7f7-4978300ff7be', protocol='range'}
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Notifying assignor about the new Assignment(partitions=[tweet-operation-0])
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Adding newly assigned partitions: tweet-operation-0
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Setting offset for partition tweet-operation-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ambau001025:9092 (id: 0 rack: null)], epoch=0}}
""2022-09-02 12:59:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions assigned: [tweet-operation-0]
""2022-09-02 12:59:18 [http-nio-8081-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2022-09-02 12:59:18 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Getting all tweets from database
""2022-09-02 12:59:18 [http-nio-8081-exec-2] INFO  com.tweetapp.services.TweetService - Getting all tweets from repository - by TweetService
""2022-09-02 12:59:19 [http-nio-8081-exec-2] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:7, serverValue:219902}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 12:59:28 [http-nio-8081-exec-4] INFO  c.t.controllers.UserController - Logging in
""2022-09-02 12:59:28 [http-nio-8081-exec-4] INFO  com.tweetapp.services.UserService - Checking if username and password match - by UserService
""2022-09-02 12:59:28 [http-nio-8081-exec-5] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 12:59:28 [http-nio-8081-exec-5] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 12:59:28 [http-nio-8081-exec-6] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 12:59:28 [http-nio-8081-exec-6] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 12:59:43 [http-nio-8081-exec-8] INFO  c.t.controllers.TweetController - Creating tweet by bryan123
""2022-09-02 12:59:43 [http-nio-8081-exec-8] INFO  com.tweetapp.services.TweetService - Creating a tweet: 10213 - by TweetService
""2022-09-02 12:59:43 [http-nio-8081-exec-9] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 12:59:43 [http-nio-8081-exec-9] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 12:59:43 [http-nio-8081-exec-9] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 12:59:43 [http-nio-8081-exec-9] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 12:59:46 [http-nio-8081-exec-1] INFO  c.t.controllers.TweetController - Getting all tweets from database
""2022-09-02 12:59:46 [http-nio-8081-exec-1] INFO  com.tweetapp.services.TweetService - Getting all tweets from repository - by TweetService
""2022-09-02 13:00:12 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Deleting tweet: 10213
""2022-09-02 13:00:12 [http-nio-8081-exec-2] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

""2022-09-02 13:00:12 [http-nio-8081-exec-2] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
""2022-09-02 13:00:12 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 13:00:12 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 13:00:12 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662087612524
""2022-09-02 13:00:12 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 13:00:12 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 13:00:12 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1001 with epoch 0
""2022-09-02 13:00:12 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 13:00:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:00:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 2 for partition tweet-operation-0
""2022-09-02 13:00:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:00:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:00:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 2 for partition tweet-operation-0
""2022-09-02 13:00:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:00:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:00:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 2 for partition tweet-operation-0
""2022-09-02 13:00:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:00:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:00:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 2 for partition tweet-operation-0
""2022-09-02 13:00:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:00:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:00:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 2 for partition tweet-operation-0
""2022-09-02 13:00:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:00:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:00:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 2 for partition tweet-operation-0
""2022-09-02 13:00:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:00:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:00:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 2 for partition tweet-operation-0
""2022-09-02 13:00:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:00:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:00:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 2 for partition tweet-operation-0
""2022-09-02 13:00:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:00:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:00:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 2 for partition tweet-operation-0
""2022-09-02 13:00:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:00:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:00:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for tweet-operation-0@2
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:01:09 [http-nio-8081-exec-5] INFO  c.t.controllers.TweetController - Getting all tweets from database
""2022-09-02 13:01:09 [http-nio-8081-exec-5] INFO  com.tweetapp.services.TweetService - Getting all tweets from repository - by TweetService
""2022-09-02 13:01:17 [http-nio-8081-exec-6] INFO  c.t.controllers.TweetController - Deleting tweet: 10213
""2022-09-02 13:01:17 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 13:01:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:01:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 3 for partition tweet-operation-0
""2022-09-02 13:01:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:01:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:01:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 3 for partition tweet-operation-0
""2022-09-02 13:01:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:01:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:01:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 3 for partition tweet-operation-0
""2022-09-02 13:01:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:01:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:01:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 3 for partition tweet-operation-0
""2022-09-02 13:01:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:01:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:01:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 3 for partition tweet-operation-0
""2022-09-02 13:01:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:01:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:01:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 3 for partition tweet-operation-0
""2022-09-02 13:01:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:01:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:01:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 3 for partition tweet-operation-0
""2022-09-02 13:01:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:01:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:01:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 3 for partition tweet-operation-0
""2022-09-02 13:01:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:01:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:01:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 3 for partition tweet-operation-0
""2022-09-02 13:01:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:01:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:01:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for tweet-operation-0@3
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Revoke previously assigned partitions tweet-operation-0
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions revoked: [tweet-operation-0]
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Member consumer-spring-boot-api-consumer-1-0fc28d76-a600-4f6c-b7f7-4978300ff7be sending LeaveGroup request to coordinator ambau001025:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 13:01:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 13:01:25 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
""2022-09-02 13:01:25 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 13:01:25 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 13:01:25 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 13:01:25 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
""2022-09-02 13:01:31 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 93822 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 13:01:31 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 13:01:31 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 13:01:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 13:01:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 13:01:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:01:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:01:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:01:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:01:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:01:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:01:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:01:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 13:01:34 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 13:01:34 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 13:01:34 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 13:01:35 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 13:01:35 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3570 ms
""2022-09-02 13:01:35 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@71a4de1c], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@40a62217]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@58ccaa8d], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 13:01:35 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:01:35 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:01:35 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:01:35 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 13:01:36 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 13:01:36 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 13:01:36 [cluster-rtt-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:216403}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 13:01:36 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:216403}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 13:01:36 [cluster-rtt-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:216056}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 13:01:36 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:219834}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:01:36 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:216056}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 13:01:36 [cluster-rtt-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:219834}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:01:36 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=812899042, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 13:01:36 AEST 2022, lastUpdateTimeNanos=45861603197500}
""2022-09-02 13:01:36 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=814751750, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 13:01:36 AEST 2022, lastUpdateTimeNanos=45861603140917}
""2022-09-02 13:01:36 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=819646791, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 13:01:36 AEST 2022, lastUpdateTimeNanos=45861608098958}
""2022-09-02 13:01:36 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:01:36 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:01:36 [cluster-ClusterId{value='6311720f79b0d6545c25edb7', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:01:37 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@dc5f813, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@537b3702, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a8b17a4, org.springframework.security.web.header.HeaderWriterFilter@52b1b9a, org.springframework.security.web.authentication.logout.LogoutFilter@71a8915a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4bf8e501, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1c6246d8, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4419078, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77922627, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c4e9f79, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e0952ec, org.springframework.security.web.session.SessionManagementFilter@7a09d998, org.springframework.security.web.access.ExceptionTranslationFilter@6778a945, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@78a6acae]
""2022-09-02 13:01:38 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 13:01:38 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 13:01:38 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 13:01:38 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 13:01:38 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662087698885
""2022-09-02 13:01:38 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet-operation
""2022-09-02 13:01:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 13:01:38 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 8.405 seconds (JVM running for 9.325)
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator ambau001025:9092 (id: 2147483647 rack: null)
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: need to re-join with the given member-id
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully joined group with generation Generation{generationId=14, memberId='consumer-spring-boot-api-consumer-1-16c23354-e7ca-4eee-94e3-2e6e6f0dd8ba', protocol='range'}
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Finished assignment for group at generation 14: {consumer-spring-boot-api-consumer-1-16c23354-e7ca-4eee-94e3-2e6e6f0dd8ba=Assignment(partitions=[tweet-operation-0])}
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully synced group in generation Generation{generationId=14, memberId='consumer-spring-boot-api-consumer-1-16c23354-e7ca-4eee-94e3-2e6e6f0dd8ba', protocol='range'}
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Notifying assignor about the new Assignment(partitions=[tweet-operation-0])
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Adding newly assigned partitions: tweet-operation-0
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Setting offset for partition tweet-operation-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ambau001025:9092 (id: 0 rack: null)], epoch=0}}
""2022-09-02 13:01:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions assigned: [tweet-operation-0]
""2022-09-02 13:01:42 [http-nio-8081-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2022-09-02 13:01:43 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Deleting tweet: 10213
""2022-09-02 13:01:43 [http-nio-8081-exec-2] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

""2022-09-02 13:01:43 [http-nio-8081-exec-2] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
""2022-09-02 13:01:43 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 13:01:43 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 13:01:43 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662087703090
""2022-09-02 13:01:43 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 13:01:43 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 13:01:43 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1002 with epoch 0
""2022-09-02 13:01:43 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 13:01:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for tweet-operation-0@4
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String,java.lang.Integer)]
Bean [com.tweetapp.consumer.ConsumerService@73bc19ef]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Failed to convert message payload 'delete' to 'java.lang.Integer'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Integer] for value 'delete'; nested exception is java.lang.NumberFormatException: For input string: "delete", failedMessage=GenericMessage [payload=delete, headers={kafka_offset=4, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@785cc37e, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=tweet-operation, kafka_receivedTimestamp=1662087703120, kafka_groupId=spring-boot-api-consumer}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Failed to convert message payload 'delete' to 'java.lang.Integer'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Integer] for value 'delete'; nested exception is java.lang.NumberFormatException: For input string: "delete", failedMessage=GenericMessage [payload=delete, headers={kafka_offset=4, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@785cc37e, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=tweet-operation, kafka_receivedTimestamp=1662087703120, kafka_groupId=spring-boot-api-consumer}]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:374)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Failed to convert message payload 'delete' to 'java.lang.Integer'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Integer] for value 'delete'; nested exception is java.lang.NumberFormatException: For input string: "delete", failedMessage=GenericMessage [payload=delete, headers={kafka_offset=4, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@785cc37e, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=tweet-operation, kafka_receivedTimestamp=1662087703120, kafka_groupId=spring-boot-api-consumer}]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Failed to convert message payload 'delete' to 'java.lang.Integer'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Integer] for value 'delete'; nested exception is java.lang.NumberFormatException: For input string: "delete"
	at org.springframework.messaging.converter.GenericMessageConverter.fromMessage(GenericMessageConverter.java:70)
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:141)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	... 14 common frames omitted
Caused by: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Integer] for value 'delete'; nested exception is java.lang.NumberFormatException: For input string: "delete"
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:47)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:192)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:175)
	at org.springframework.messaging.converter.GenericMessageConverter.fromMessage(GenericMessageConverter.java:66)
	... 21 common frames omitted
Caused by: java.lang.NumberFormatException: For input string: "delete"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.valueOf(Integer.java:995)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber.convert(StringToNumberConverterFactory.java:64)
	at org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber.convert(StringToNumberConverterFactory.java:50)
	at org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter.convert(GenericConversionService.java:437)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	... 24 common frames omitted
"2022-09-02 13:03:54 [http-nio-8081-exec-4] INFO  c.t.controllers.TweetController - Deleting tweet: 10213
""2022-09-02 13:03:54 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 13:03:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for tweet-operation-0@5
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String,java.lang.Integer)]
Bean [com.tweetapp.consumer.ConsumerService@73bc19ef]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Failed to convert message payload 'delete' to 'java.lang.Integer'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Integer] for value 'delete'; nested exception is java.lang.NumberFormatException: For input string: "delete", failedMessage=GenericMessage [payload=delete, headers={kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@785cc37e, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=tweet-operation, kafka_receivedTimestamp=1662087834576, kafka_groupId=spring-boot-api-consumer}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Failed to convert message payload 'delete' to 'java.lang.Integer'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Integer] for value 'delete'; nested exception is java.lang.NumberFormatException: For input string: "delete", failedMessage=GenericMessage [payload=delete, headers={kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@785cc37e, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=tweet-operation, kafka_receivedTimestamp=1662087834576, kafka_groupId=spring-boot-api-consumer}]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:374)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Failed to convert message payload 'delete' to 'java.lang.Integer'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Integer] for value 'delete'; nested exception is java.lang.NumberFormatException: For input string: "delete", failedMessage=GenericMessage [payload=delete, headers={kafka_offset=5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@785cc37e, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=tweet-operation, kafka_receivedTimestamp=1662087834576, kafka_groupId=spring-boot-api-consumer}]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Failed to convert message payload 'delete' to 'java.lang.Integer'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Integer] for value 'delete'; nested exception is java.lang.NumberFormatException: For input string: "delete"
	at org.springframework.messaging.converter.GenericMessageConverter.fromMessage(GenericMessageConverter.java:70)
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:141)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	... 14 common frames omitted
Caused by: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Integer] for value 'delete'; nested exception is java.lang.NumberFormatException: For input string: "delete"
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:47)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:192)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:175)
	at org.springframework.messaging.converter.GenericMessageConverter.fromMessage(GenericMessageConverter.java:66)
	... 21 common frames omitted
Caused by: java.lang.NumberFormatException: For input string: "delete"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.valueOf(Integer.java:995)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber.convert(StringToNumberConverterFactory.java:64)
	at org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber.convert(StringToNumberConverterFactory.java:50)
	at org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter.convert(GenericConversionService.java:437)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	... 24 common frames omitted
"2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Revoke previously assigned partitions tweet-operation-0
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions revoked: [tweet-operation-0]
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Member consumer-spring-boot-api-consumer-1-16c23354-e7ca-4eee-94e3-2e6e6f0dd8ba sending LeaveGroup request to coordinator ambau001025:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 13:04:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 13:04:00 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
""2022-09-02 13:04:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 13:04:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 13:04:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 13:04:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
""2022-09-02 13:04:06 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 2694 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 13:04:06 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 13:04:06 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 13:04:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 13:04:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 13:04:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:04:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:04:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:04:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:04:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:04:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:04:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:04:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 94 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 13:04:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 13:04:09 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 13:04:09 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 13:04:09 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 13:04:09 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2983 ms
""2022-09-02 13:04:10 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@228b550b], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ac0f751]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6bbbbf2], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 13:04:10 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:04:10 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:04:10 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:04:10 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 13:04:10 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 13:04:10 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 13:04:11 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:220047}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:04:11 [cluster-rtt-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:220047}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:04:11 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:216448}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 13:04:11 [cluster-rtt-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:216099}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 13:04:11 [cluster-rtt-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:216453}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 13:04:11 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:216099}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 13:04:11 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=730253917, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 13:04:11 AEST 2022, lastUpdateTimeNanos=46015926492625}
""2022-09-02 13:04:11 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=731842875, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 13:04:11 AEST 2022, lastUpdateTimeNanos=46015925703417}
""2022-09-02 13:04:11 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=738938458, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 13:04:11 AEST 2022, lastUpdateTimeNanos=46015933590292}
""2022-09-02 13:04:11 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:04:11 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:04:11 [cluster-ClusterId{value='631172a9f9136e0f008f3a56', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:04:11 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7a9dc7b9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@78a6acae, org.springframework.security.web.context.SecurityContextPersistenceFilter@3225b8c8, org.springframework.security.web.header.HeaderWriterFilter@5f044b60, org.springframework.security.web.authentication.logout.LogoutFilter@646a850d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4acfc706, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@7a09d998, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@9d9f581, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5bcd4b9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5899614f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54f1de96, org.springframework.security.web.session.SessionManagementFilter@4b1d89bd, org.springframework.security.web.access.ExceptionTranslationFilter@79a0bf2f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c0be7ec]
""2022-09-02 13:04:12 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 13:04:12 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 13:04:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 13:04:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 13:04:12 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662087852834
""2022-09-02 13:04:12 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet-operation
""2022-09-02 13:04:12 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 13:04:12 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 7.375 seconds (JVM running for 8.152)
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator ambau001025:9092 (id: 2147483647 rack: null)
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: need to re-join with the given member-id
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully joined group with generation Generation{generationId=16, memberId='consumer-spring-boot-api-consumer-1-d8fb7b93-b1e9-4708-86ad-2537113ca6f0', protocol='range'}
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Finished assignment for group at generation 16: {consumer-spring-boot-api-consumer-1-d8fb7b93-b1e9-4708-86ad-2537113ca6f0=Assignment(partitions=[tweet-operation-0])}
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully synced group in generation Generation{generationId=16, memberId='consumer-spring-boot-api-consumer-1-d8fb7b93-b1e9-4708-86ad-2537113ca6f0', protocol='range'}
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Notifying assignor about the new Assignment(partitions=[tweet-operation-0])
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Adding newly assigned partitions: tweet-operation-0
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Setting offset for partition tweet-operation-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ambau001025:9092 (id: 0 rack: null)], epoch=0}}
""2022-09-02 13:04:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions assigned: [tweet-operation-0]
""2022-09-02 13:04:19 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2022-09-02 13:04:19 [http-nio-8081-exec-1] INFO  c.t.controllers.TweetController - Getting all tweets from database
""2022-09-02 13:04:19 [http-nio-8081-exec-1] INFO  com.tweetapp.services.TweetService - Getting all tweets from repository - by TweetService
""2022-09-02 13:04:20 [http-nio-8081-exec-1] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:7, serverValue:220084}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:04:24 [http-nio-8081-exec-3] INFO  c.t.controllers.TweetController - Deleting tweet: 10213
""2022-09-02 13:04:24 [http-nio-8081-exec-3] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

""2022-09-02 13:04:24 [http-nio-8081-exec-3] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
""2022-09-02 13:04:24 [http-nio-8081-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 13:04:24 [http-nio-8081-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 13:04:24 [http-nio-8081-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662087864836
""2022-09-02 13:04:24 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 13:04:24 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 13:04:24 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1003 with epoch 0
""2022-09-02 13:04:24 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 13:04:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:04:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 6 for partition tweet-operation-0
""2022-09-02 13:04:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:04:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:04:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 6 for partition tweet-operation-0
""2022-09-02 13:04:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:04:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:04:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 6 for partition tweet-operation-0
""2022-09-02 13:04:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:04:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:04:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 6 for partition tweet-operation-0
""2022-09-02 13:04:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:04:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:04:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 6 for partition tweet-operation-0
""2022-09-02 13:04:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:04:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:04:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 6 for partition tweet-operation-0
""2022-09-02 13:04:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:04:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:04:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 6 for partition tweet-operation-0
""2022-09-02 13:04:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:04:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:04:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 6 for partition tweet-operation-0
""2022-09-02 13:04:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:04:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:04:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 6 for partition tweet-operation-0
""2022-09-02 13:04:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:04:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: null
""2022-09-02 13:04:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for tweet-operation-0@6
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.services.TweetService.deleteById(TweetService.java:56)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Revoke previously assigned partitions tweet-operation-0
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions revoked: [tweet-operation-0]
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Member consumer-spring-boot-api-consumer-1-d8fb7b93-b1e9-4708-86ad-2537113ca6f0 sending LeaveGroup request to coordinator ambau001025:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 13:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 13:09:36 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
""2022-09-02 13:09:36 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 13:09:36 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 13:09:36 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 13:09:36 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
""2022-09-02 13:09:42 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 7183 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 13:09:42 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 13:09:42 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 13:09:42 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 13:09:42 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 13:09:43 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:09:43 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:09:43 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:09:43 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:09:43 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:09:43 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:09:43 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:09:43 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 84 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 13:09:45 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 13:09:45 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 13:09:45 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 13:09:45 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 13:09:45 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3150 ms
""2022-09-02 13:09:46 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:09:46 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@228b550b], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7ac0f751]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6bbbbf2], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 13:09:46 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:09:46 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:09:46 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 13:09:46 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 13:09:47 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 13:09:47 [cluster-rtt-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:216190}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 13:09:47 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:220036}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:09:47 [cluster-rtt-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:220036}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:09:47 [cluster-rtt-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:216543}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 13:09:47 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:216190}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 13:09:47 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:216543}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 13:09:47 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=962241917, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 13:09:47 AEST 2022, lastUpdateTimeNanos=46352198149417}
""2022-09-02 13:09:47 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=960275167, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 13:09:47 AEST 2022, lastUpdateTimeNanos=46352197997500}
""2022-09-02 13:09:47 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=962411250, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 13:09:47 AEST 2022, lastUpdateTimeNanos=46352199383833}
""2022-09-02 13:09:47 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:09:47 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:09:47 [cluster-ClusterId{value='631173fa6b42df7fe706597d', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:09:48 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@78a6acae, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9d9f581, org.springframework.security.web.context.SecurityContextPersistenceFilter@15529f50, org.springframework.security.web.header.HeaderWriterFilter@373801b2, org.springframework.security.web.authentication.logout.LogoutFilter@4b09225a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@219a0794, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@14a1ba06, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@54f1de96, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7804ad75, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a09d998, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40457bbe, org.springframework.security.web.session.SessionManagementFilter@38450764, org.springframework.security.web.access.ExceptionTranslationFilter@2f4b8c06, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2539b710]
""2022-09-02 13:09:48 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 13:09:49 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 13:09:49 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 13:09:49 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 13:09:49 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662088189125
""2022-09-02 13:09:49 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet-operation
""2022-09-02 13:09:49 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 13:09:49 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 7.662 seconds (JVM running for 8.481)
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator ambau001025:9092 (id: 2147483647 rack: null)
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: need to re-join with the given member-id
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully joined group with generation Generation{generationId=18, memberId='consumer-spring-boot-api-consumer-1-2f84abb3-3f93-4649-8348-80b75fbd1a0c', protocol='range'}
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Finished assignment for group at generation 18: {consumer-spring-boot-api-consumer-1-2f84abb3-3f93-4649-8348-80b75fbd1a0c=Assignment(partitions=[tweet-operation-0])}
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully synced group in generation Generation{generationId=18, memberId='consumer-spring-boot-api-consumer-1-2f84abb3-3f93-4649-8348-80b75fbd1a0c', protocol='range'}
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Notifying assignor about the new Assignment(partitions=[tweet-operation-0])
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Adding newly assigned partitions: tweet-operation-0
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Setting offset for partition tweet-operation-0 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ambau001025:9092 (id: 0 rack: null)], epoch=0}}
""2022-09-02 13:09:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions assigned: [tweet-operation-0]
""2022-09-02 13:09:52 [http-nio-8081-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2022-09-02 13:09:52 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Deleting tweet: 10213
""2022-09-02 13:09:52 [http-nio-8081-exec-2] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

""2022-09-02 13:09:52 [http-nio-8081-exec-2] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
""2022-09-02 13:09:53 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 13:09:53 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 13:09:53 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662088193009
""2022-09-02 13:09:53 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 13:09:53 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 13:09:53 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1004 with epoch 0
""2022-09-02 13:09:53 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 13:09:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 7 for partition tweet-operation-0
""2022-09-02 13:09:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:09:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 7 for partition tweet-operation-0
""2022-09-02 13:09:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:09:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 7 for partition tweet-operation-0
""2022-09-02 13:09:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:09:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 7 for partition tweet-operation-0
""2022-09-02 13:09:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:09:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 7 for partition tweet-operation-0
""2022-09-02 13:09:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:09:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 7 for partition tweet-operation-0
""2022-09-02 13:09:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:09:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 7 for partition tweet-operation-0
""2022-09-02 13:09:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:09:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 7 for partition tweet-operation-0
""2022-09-02 13:09:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:09:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Seeking to offset 7 for partition tweet-operation-0
""2022-09-02 13:09:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
"org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:169)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2817)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	... 9 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:09:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for tweet-operation-0@7
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.tweetapp.consumer.ConsumerService.consume(java.lang.String)' threw exception; nested exception is java.lang.IllegalArgumentException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2844)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2795)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2755)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2679)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2417)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2057)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1412)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1376)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1273)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
Caused by: java.lang.IllegalArgumentException: The given id must not be null!
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.deleteById(SimpleMongoRepository.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy109.deleteById(Unknown Source)
	at com.tweetapp.consumer.ConsumerService.consume(ConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2775)
	... 11 common frames omitted
"2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Revoke previously assigned partitions tweet-operation-0
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions revoked: [tweet-operation-0]
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Member consumer-spring-boot-api-consumer-1-2f84abb3-3f93-4649-8348-80b75fbd1a0c sending LeaveGroup request to coordinator ambau001025:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 13:12:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 13:12:20 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
""2022-09-02 13:12:20 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 13:12:20 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 13:12:20 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 13:12:20 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
""2022-09-02 13:12:26 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 9312 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 13:12:26 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 13:12:26 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 13:12:27 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 13:12:27 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 13:12:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:12:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:12:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:12:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 0 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:12:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:12:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 13:12:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 13:12:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 13:12:29 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 13:12:30 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 13:12:30 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 13:12:30 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 13:12:30 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2968 ms
""2022-09-02 13:12:30 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@2f32d2b6], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@70b8216e]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@10e1127c], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 13:12:30 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:12:30 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:12:30 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 13:12:30 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 13:12:31 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 13:12:31 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 13:12:31 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:216235}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 13:12:31 [cluster-rtt-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:216235}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 13:12:31 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:216594}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 13:12:31 [cluster-rtt-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:216598}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 13:12:31 [cluster-rtt-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:220235}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:12:31 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:220242}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:12:31 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=715505792, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 13:12:31 AEST 2022, lastUpdateTimeNanos=46516586919958}
""2022-09-02 13:12:31 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=715610084, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 13:12:31 AEST 2022, lastUpdateTimeNanos=46516587072083}
""2022-09-02 13:12:31 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=715504000, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 13:12:31 AEST 2022, lastUpdateTimeNanos=46516587515750}
""2022-09-02 13:12:31 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:12:31 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:12:31 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:12:32 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1cae205e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1667c7ee, org.springframework.security.web.context.SecurityContextPersistenceFilter@609e044c, org.springframework.security.web.header.HeaderWriterFilter@498b84c3, org.springframework.security.web.authentication.logout.LogoutFilter@5127e77e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2073502c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@214a3f2b, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@1ead570a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e9a2779, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f90f887, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6ac7f801, org.springframework.security.web.session.SessionManagementFilter@6efac074, org.springframework.security.web.access.ExceptionTranslationFilter@7a09d998, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@dcb6cc4]
""2022-09-02 13:12:33 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 13:12:33 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 13:12:33 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 13:12:33 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 13:12:33 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662088353574
""2022-09-02 13:12:33 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet-operation
""2022-09-02 13:12:33 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 13:12:33 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 7.359 seconds (JVM running for 8.139)
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator ambau001025:9092 (id: 2147483647 rack: null)
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: need to re-join with the given member-id
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully joined group with generation Generation{generationId=20, memberId='consumer-spring-boot-api-consumer-1-d4832a59-6781-4f83-88ea-c96c62486045', protocol='range'}
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Finished assignment for group at generation 20: {consumer-spring-boot-api-consumer-1-d4832a59-6781-4f83-88ea-c96c62486045=Assignment(partitions=[tweet-operation-0])}
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully synced group in generation Generation{generationId=20, memberId='consumer-spring-boot-api-consumer-1-d4832a59-6781-4f83-88ea-c96c62486045', protocol='range'}
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Notifying assignor about the new Assignment(partitions=[tweet-operation-0])
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Adding newly assigned partitions: tweet-operation-0
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Setting offset for partition tweet-operation-0 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ambau001025:9092 (id: 0 rack: null)], epoch=0}}
""2022-09-02 13:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions assigned: [tweet-operation-0]
""2022-09-02 13:12:36 [http-nio-8081-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2022-09-02 13:12:36 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Deleting tweet: 10213
""2022-09-02 13:12:36 [http-nio-8081-exec-2] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

""2022-09-02 13:12:37 [http-nio-8081-exec-2] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
""2022-09-02 13:12:37 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 13:12:37 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 13:12:37 [http-nio-8081-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662088357037
""2022-09-02 13:12:37 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 13:12:37 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1005 with epoch 0
""2022-09-02 13:12:37 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 13:12:37 [http-nio-8081-exec-2] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: 10213
""2022-09-02 13:12:37 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 13:12:37 [http-nio-8081-exec-2] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:7, serverValue:220252}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 13:21:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Node -1 disconnected.
""2022-09-02 13:21:37 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
""2022-09-02 13:41:56 [http-nio-8081-exec-4] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 13:41:56 [http-nio-8081-exec-4] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 13:41:57 [http-nio-8081-exec-5] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 13:41:57 [http-nio-8081-exec-5] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 13:41:57 [http-nio-8081-exec-6] INFO  c.t.controllers.TweetController - Getting a tweet of ID 943
""2022-09-02 13:41:57 [http-nio-8081-exec-6] INFO  com.tweetapp.services.TweetService - Getting a tweet by id: 943 - by TweetService
""2022-09-02 13:42:03 [http-nio-8081-exec-8] INFO  c.t.controllers.TweetController - Creating tweet by bryan123
""2022-09-02 13:42:03 [http-nio-8081-exec-8] INFO  com.tweetapp.services.TweetService - Creating a tweet: 2658 - by TweetService
""2022-09-02 13:42:03 [http-nio-8081-exec-9] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 13:42:03 [http-nio-8081-exec-9] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 13:42:03 [http-nio-8081-exec-10] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 13:42:03 [http-nio-8081-exec-10] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 13:42:04 [http-nio-8081-exec-1] INFO  c.t.controllers.TweetController - Getting a tweet of ID 2658
""2022-09-02 13:42:04 [http-nio-8081-exec-1] INFO  com.tweetapp.services.TweetService - Getting a tweet by id: 2658 - by TweetService
""2022-09-02 13:42:07 [http-nio-8081-exec-3] INFO  c.t.controllers.TweetController - Deleting tweet: 2658
""2022-09-02 13:42:07 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 13:42:07 [http-nio-8081-exec-3] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: 2658
""2022-09-02 13:42:07 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 13:42:07 [http-nio-8081-exec-4] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 13:42:07 [http-nio-8081-exec-4] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 13:42:07 [http-nio-8081-exec-5] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 13:42:07 [http-nio-8081-exec-5] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 13:42:10 [http-nio-8081-exec-6] INFO  c.t.controllers.UserController - Getting all available users
""2022-09-02 13:42:10 [http-nio-8081-exec-6] INFO  com.tweetapp.services.UserService - Getting all users - by UserService
""2022-09-02 15:13:02 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-01.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 15:13:02 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:8, serverValue:218319}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 15:13:02 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=139083750, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 15:13:02 AEST 2022, lastUpdateTimeNanos=53747499844000}
""2022-09-02 15:13:03 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-02.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 15:13:03 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster0-shard-00-00.drrxc.mongodb.net:27017
"com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:696)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:574)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:410)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:369)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:221)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:157)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:280)
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:306)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:347)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:800)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472)
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1455)
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1059)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:110)
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:135)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:713)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveMessageWithAdditionalTimeout(InternalStreamConnection.java:571)
	... 5 common frames omitted
"2022-09-02 15:13:03 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:10, serverValue:218675}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 15:13:03 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:9, serverValue:222288}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:13:03 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=141784458, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 15:13:03 AEST 2022, lastUpdateTimeNanos=53748599777875}
""2022-09-02 15:13:03 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=142680625, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 15:13:03 AEST 2022, lastUpdateTimeNanos=53748599397917}
""2022-09-02 15:13:03 [cluster-ClusterId{value='6311749e8e78c40b5ffb252a', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Revoke previously assigned partitions tweet-operation-0
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions revoked: [tweet-operation-0]
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Member consumer-spring-boot-api-consumer-1-d4832a59-6781-4f83-88ea-c96c62486045 sending LeaveGroup request to coordinator ambau001025:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 15:14:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 15:14:00 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
""2022-09-02 15:14:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 15:14:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 15:14:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 15:14:00 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
""2022-09-02 15:14:00 [SpringApplicationShutdownHook] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:11, serverValue:222335}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:14:07 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 42852 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 15:14:07 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 15:14:07 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 15:14:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 15:14:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 15:14:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:14:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 15:14:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:14:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 15:14:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:14:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 15:14:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:14:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 101 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 15:14:10 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 15:14:10 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 15:14:10 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 15:14:10 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 15:14:10 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3376 ms
""2022-09-02 15:14:11 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 15:14:11 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@4dbd202d], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@228b550b]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7ac0f751], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 15:14:11 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 15:14:11 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 15:14:11 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 15:14:12 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 15:14:12 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 15:14:12 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:218336}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 15:14:12 [cluster-rtt-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:222127}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:14:12 [cluster-rtt-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:218336}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 15:14:12 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:218694}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 15:14:12 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:222127}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:14:12 [cluster-rtt-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:218694}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 15:14:12 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=754370083, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 15:14:12 AEST 2022, lastUpdateTimeNanos=53817279020125}
""2022-09-02 15:14:12 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=754632834, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 15:14:12 AEST 2022, lastUpdateTimeNanos=53817279301500}
""2022-09-02 15:14:12 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=754448459, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 15:14:12 AEST 2022, lastUpdateTimeNanos=53817279116875}
""2022-09-02 15:14:12 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:14:12 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:14:12 [cluster-ClusterId{value='63119123ce06793d70e9a2fb', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:14:13 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7a9dc7b9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@78a6acae, org.springframework.security.web.context.SecurityContextPersistenceFilter@3225b8c8, org.springframework.security.web.header.HeaderWriterFilter@5f044b60, org.springframework.security.web.authentication.logout.LogoutFilter@646a850d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4acfc706, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@7a09d998, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@9d9f581, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5bcd4b9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5899614f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54f1de96, org.springframework.security.web.session.SessionManagementFilter@4b1d89bd, org.springframework.security.web.access.ExceptionTranslationFilter@79a0bf2f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c0be7ec]
""2022-09-02 15:14:14 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 15:14:14 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 15:14:14 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 15:14:14 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 15:14:14 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662095654340
""2022-09-02 15:14:14 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet-operation
""2022-09-02 15:14:14 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 15:14:14 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 7.866 seconds (JVM running for 8.823)
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator ambau001025:9092 (id: 2147483647 rack: null)
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: need to re-join with the given member-id
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully joined group with generation Generation{generationId=22, memberId='consumer-spring-boot-api-consumer-1-311bda08-b20c-42e2-9cb3-5f25932205df', protocol='range'}
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Finished assignment for group at generation 22: {consumer-spring-boot-api-consumer-1-311bda08-b20c-42e2-9cb3-5f25932205df=Assignment(partitions=[tweet-operation-0])}
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully synced group in generation Generation{generationId=22, memberId='consumer-spring-boot-api-consumer-1-311bda08-b20c-42e2-9cb3-5f25932205df', protocol='range'}
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Notifying assignor about the new Assignment(partitions=[tweet-operation-0])
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Adding newly assigned partitions: tweet-operation-0
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Setting offset for partition tweet-operation-0 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ambau001025:9092 (id: 0 rack: null)], epoch=0}}
""2022-09-02 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions assigned: [tweet-operation-0]
""2022-09-02 15:14:21 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2022-09-02 15:14:21 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Creating tweet by bryan123
""2022-09-02 15:14:21 [http-nio-8081-exec-2] INFO  com.tweetapp.services.TweetService - Creating a tweet: 6811 - by TweetService
""2022-09-02 15:14:22 [http-nio-8081-exec-2] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:7, serverValue:222324}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:14:22 [http-nio-8081-exec-4] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:14:22 [http-nio-8081-exec-4] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:14:22 [http-nio-8081-exec-3] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:14:22 [http-nio-8081-exec-3] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:14:24 [http-nio-8081-exec-5] INFO  c.t.controllers.TweetController - Getting a tweet of ID 6811
""2022-09-02 15:14:24 [http-nio-8081-exec-5] INFO  com.tweetapp.services.TweetService - Getting a tweet by id: 6811 - by TweetService
""2022-09-02 15:14:27 [http-nio-8081-exec-7] INFO  c.t.controllers.TweetController - Deleting tweet: 6811
""2022-09-02 15:14:27 [http-nio-8081-exec-7] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

""2022-09-02 15:14:27 [http-nio-8081-exec-7] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
""2022-09-02 15:14:27 [http-nio-8081-exec-7] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 15:14:27 [http-nio-8081-exec-7] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 15:14:27 [http-nio-8081-exec-7] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662095667432
""2022-09-02 15:14:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 15:14:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 15:14:27 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1006 with epoch 0
""2022-09-02 15:14:27 [http-nio-8081-exec-7] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: 6811
""2022-09-02 15:14:27 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 15:14:27 [http-nio-8081-exec-8] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:14:27 [http-nio-8081-exec-8] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:14:27 [http-nio-8081-exec-9] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:14:27 [http-nio-8081-exec-9] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:16:06 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Creating tweet by bryan123
""2022-09-02 15:16:06 [http-nio-8081-exec-2] INFO  com.tweetapp.services.TweetService - Creating a tweet: 19211 - by TweetService
""2022-09-02 15:16:06 [http-nio-8081-exec-4] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:16:06 [http-nio-8081-exec-4] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:16:06 [http-nio-8081-exec-3] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:16:06 [http-nio-8081-exec-3] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:16:08 [http-nio-8081-exec-5] INFO  c.t.controllers.TweetController - Getting a tweet of ID 19211
""2022-09-02 15:16:08 [http-nio-8081-exec-5] INFO  com.tweetapp.services.TweetService - Getting a tweet by id: 19211 - by TweetService
""2022-09-02 15:16:11 [http-nio-8081-exec-7] INFO  c.t.controllers.TweetController - Deleting tweet: 19211
""2022-09-02 15:16:11 [http-nio-8081-exec-7] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: 19211
""2022-09-02 15:16:11 [http-nio-8081-exec-8] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:16:11 [http-nio-8081-exec-8] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:16:11 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 15:16:11 [http-nio-8081-exec-9] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:16:11 [http-nio-8081-exec-9] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Revoke previously assigned partitions tweet-operation-0
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions revoked: [tweet-operation-0]
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Member consumer-spring-boot-api-consumer-1-311bda08-b20c-42e2-9cb3-5f25932205df sending LeaveGroup request to coordinator ambau001025:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 15:16:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 15:16:21 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
""2022-09-02 15:16:23 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 15:16:23 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 15:16:23 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 15:16:23 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
""2022-09-02 15:16:30 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 46825 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 15:16:30 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 15:16:30 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 15:16:30 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 15:16:30 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 15:16:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:16:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 15:16:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:16:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 15:16:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:16:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 15:16:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:16:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 15:16:33 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 15:16:33 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 15:16:33 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 15:16:34 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 15:16:34 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3028 ms
""2022-09-02 15:16:34 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 15:16:34 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@4dbd202d], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@228b550b]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7ac0f751], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 15:16:34 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 15:16:34 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 15:16:34 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 15:16:35 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 15:16:35 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 15:16:35 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:218744}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 15:16:35 [cluster-rtt-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:218382}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 15:16:35 [cluster-rtt-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:218740}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 15:16:35 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:222288}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:16:35 [cluster-rtt-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:222288}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:16:35 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:218382}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 15:16:35 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=700276708, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 15:16:35 AEST 2022, lastUpdateTimeNanos=53960397390833}
""2022-09-02 15:16:35 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=703349125, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 15:16:35 AEST 2022, lastUpdateTimeNanos=53960397992750}
""2022-09-02 15:16:35 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=703377250, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 15:16:35 AEST 2022, lastUpdateTimeNanos=53960395847375}
""2022-09-02 15:16:35 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:16:35 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:16:35 [cluster-ClusterId{value='631191b208aeb7799f172566', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:16:36 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@22a66575, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4acfc706, org.springframework.security.web.context.SecurityContextPersistenceFilter@2f4b8c06, org.springframework.security.web.header.HeaderWriterFilter@2dde336c, org.springframework.security.web.authentication.logout.LogoutFilter@575d0042, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2ddb63ff, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5bcd4b9, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@219a0794, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@373801b2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@15529f50, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2e958589, org.springframework.security.web.session.SessionManagementFilter@53546d72, org.springframework.security.web.access.ExceptionTranslationFilter@780edca4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3044f215]
""2022-09-02 15:16:37 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 15:16:37 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 15:16:37 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 15:16:37 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 15:16:37 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662095797412
""2022-09-02 15:16:37 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet-operation
""2022-09-02 15:16:37 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 15:16:37 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 7.315 seconds (JVM running for 8.166)
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator ambau001025:9092 (id: 2147483647 rack: null)
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: need to re-join with the given member-id
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully joined group with generation Generation{generationId=24, memberId='consumer-spring-boot-api-consumer-1-9c0a5180-75e8-4259-922b-562df0666461', protocol='range'}
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Finished assignment for group at generation 24: {consumer-spring-boot-api-consumer-1-9c0a5180-75e8-4259-922b-562df0666461=Assignment(partitions=[tweet-operation-0])}
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully synced group in generation Generation{generationId=24, memberId='consumer-spring-boot-api-consumer-1-9c0a5180-75e8-4259-922b-562df0666461', protocol='range'}
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Notifying assignor about the new Assignment(partitions=[tweet-operation-0])
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Adding newly assigned partitions: tweet-operation-0
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Setting offset for partition tweet-operation-0 to the committed offset FetchPosition{offset=12, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ambau001025:9092 (id: 0 rack: null)], epoch=0}}
""2022-09-02 15:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions assigned: [tweet-operation-0]
""2022-09-02 15:16:51 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2022-09-02 15:16:51 [http-nio-8081-exec-1] INFO  c.t.controllers.TweetController - Creating tweet by bryan123
""2022-09-02 15:16:51 [http-nio-8081-exec-1] INFO  com.tweetapp.services.TweetService - Creating a tweet: 18801 - by TweetService
""2022-09-02 15:16:52 [http-nio-8081-exec-1] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:7, serverValue:222350}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:16:52 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:16:52 [http-nio-8081-exec-2] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:16:52 [http-nio-8081-exec-3] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:16:52 [http-nio-8081-exec-3] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:16:54 [http-nio-8081-exec-4] INFO  c.t.controllers.TweetController - Getting a tweet of ID 18801
""2022-09-02 15:16:54 [http-nio-8081-exec-4] INFO  com.tweetapp.services.TweetService - Getting a tweet by id: 18801 - by TweetService
""2022-09-02 15:16:56 [http-nio-8081-exec-6] INFO  c.t.controllers.TweetController - Deleting tweet: 18801
""2022-09-02 15:16:56 [http-nio-8081-exec-6] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

""2022-09-02 15:16:56 [http-nio-8081-exec-6] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
""2022-09-02 15:16:56 [http-nio-8081-exec-6] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 15:16:56 [http-nio-8081-exec-6] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 15:16:56 [http-nio-8081-exec-6] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662095816352
""2022-09-02 15:16:56 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 15:16:56 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 15:16:56 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1007 with epoch 0
""2022-09-02 15:16:56 [http-nio-8081-exec-6] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: 18801
""2022-09-02 15:16:56 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 15:16:56 [http-nio-8081-exec-7] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:16:56 [http-nio-8081-exec-7] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:16:56 [http-nio-8081-exec-8] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:16:56 [http-nio-8081-exec-8] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Revoke previously assigned partitions tweet-operation-0
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions revoked: [tweet-operation-0]
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Member consumer-spring-boot-api-consumer-1-9c0a5180-75e8-4259-922b-562df0666461 sending LeaveGroup request to coordinator ambau001025:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Unsubscribed all topics or patterns and assigned partitions
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting generation due to: consumer pro-actively leaving the group
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: consumer pro-actively leaving the group
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-spring-boot-api-consumer-1 unregistered
""2022-09-02 15:17:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: Consumer stopped
""2022-09-02 15:17:53 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
""2022-09-02 15:17:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
""2022-09-02 15:17:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
""2022-09-02 15:17:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
""2022-09-02 15:17:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
""2022-09-02 15:17:58 [restartedMain] INFO  com.tweetapp.TweetappApplication - Starting TweetappApplication using Java 18.0.1.1 on AMBAU001025 with PID 48696 (/Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd/target/classes started by m_brandon in /Users/m_brandon/Desktop/gitrepos/TweetApp_BackEnd)
""2022-09-02 15:17:58 [restartedMain] DEBUG com.tweetapp.TweetappApplication - Running with Spring Boot v2.7.2, Spring v5.3.22
""2022-09-02 15:17:58 [restartedMain] INFO  com.tweetapp.TweetappApplication - No active profile set, falling back to 1 default profile: "default"
""2022-09-02 15:17:58 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
""2022-09-02 15:17:58 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
""2022-09-02 15:18:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:18:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 15:18:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:18:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 15:18:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:18:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 MongoDB repository interfaces.
""2022-09-02 15:18:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
""2022-09-02 15:18:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 89 ms. Found 3 MongoDB repository interfaces.
""2022-09-02 15:18:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
""2022-09-02 15:18:01 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
""2022-09-02 15:18:01 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.65]
""2022-09-02 15:18:02 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2022-09-02 15:18:02 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3130 ms
""2022-09-02 15:18:02 [restartedMain] INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "12.1"}, "platform": "Java/Oracle Corporation/18.0.1.1+2-6"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mainUser', source='admin', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@62ac5ee0], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@4b7485b4]}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.drrxc.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-bmcdhc-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@2a3e45be], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
""2022-09-02 15:18:02 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 15:18:02 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 15:18:02 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-srv-cluster0.drrxc.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.drrxc.mongodb.net:27017 to client view of cluster
""2022-09-02 15:18:02 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 15:18:03 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2022-09-02 15:18:03 [restartedMain] WARN  o.s.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
""2022-09-02 15:18:03 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:218403}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 15:18:03 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:5, serverValue:222332}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:18:03 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:218762}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 15:18:03 [cluster-rtt-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:218762}] to cluster0-shard-00-00.drrxc.mongodb.net:27017
""2022-09-02 15:18:03 [cluster-rtt-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:4, serverValue:218403}] to cluster0-shard-00-01.drrxc.mongodb.net:27017
""2022-09-02 15:18:03 [cluster-rtt-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:6, serverValue:222351}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:18:03 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-01.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=747477792, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-01.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=630525dc0c3945e9152c2643, counter=3}, lastWriteDate=Fri Sep 02 15:18:03 AEST 2022, lastUpdateTimeNanos=54048451227958}
""2022-09-02 15:18:03 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-00.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.drrxc.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=747281500, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-00.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=5, topologyVersion=TopologyVersion{processId=63052537687f73e4d1fc282d, counter=4}, lastWriteDate=Fri Sep 02 15:18:03 AEST 2022, lastUpdateTimeNanos=54048451037458}
""2022-09-02 15:18:03 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.drrxc.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=744784333, setName='atlas-bmcdhc-shard-0', canonicalAddress=cluster0-shard-00-02.drrxc.mongodb.net:27017, hosts=[cluster0-shard-00-02.drrxc.mongodb.net:27017, cluster0-shard-00-01.drrxc.mongodb.net:27017, cluster0-shard-00-00.drrxc.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-02.drrxc.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000003e, setVersion=5, topologyVersion=TopologyVersion{processId=63052589fa44094663660410, counter=6}, lastWriteDate=Fri Sep 02 15:18:03 AEST 2022, lastUpdateTimeNanos=54048450996250}
""2022-09-02 15:18:03 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max election id to 7fffffff000000000000003e from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:18:03 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Setting max set version to 5 from replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:18:03 [cluster-ClusterId{value='6311920a000f444bd7eabbdc', description='null'}-cluster0-shard-00-02.drrxc.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:18:04 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7c0be7ec, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2539b710, org.springframework.security.web.context.SecurityContextPersistenceFilter@5db1619c, org.springframework.security.web.header.HeaderWriterFilter@60575878, org.springframework.security.web.authentication.logout.LogoutFilter@3e9a2779, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@672de60f, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@38450764, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@770397bc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25b9ada7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b1d89bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@131d638, org.springframework.security.web.session.SessionManagementFilter@780edca4, org.springframework.security.web.access.ExceptionTranslationFilter@6e331a9e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@549a1019]
""2022-09-02 15:18:05 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
""2022-09-02 15:18:05 [restartedMain] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spring-boot-api-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spring-boot-api-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2022-09-02 15:18:05 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 15:18:05 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 15:18:05 [restartedMain] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662095885408
""2022-09-02 15:18:05 [restartedMain] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Subscribed to topic(s): tweet-operation
""2022-09-02 15:18:05 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
""2022-09-02 15:18:05 [restartedMain] INFO  com.tweetapp.TweetappApplication - Started TweetappApplication in 7.42 seconds (JVM running for 8.222)
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Discovered group coordinator ambau001025:9092 (id: 2147483647 rack: null)
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Request joining group due to: need to re-join with the given member-id
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] (Re-)joining group
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully joined group with generation Generation{generationId=26, memberId='consumer-spring-boot-api-consumer-1-7f12be37-4a88-40e8-a93f-2f87915b4764', protocol='range'}
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Finished assignment for group at generation 26: {consumer-spring-boot-api-consumer-1-7f12be37-4a88-40e8-a93f-2f87915b4764=Assignment(partitions=[tweet-operation-0])}
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Successfully synced group in generation Generation{generationId=26, memberId='consumer-spring-boot-api-consumer-1-7f12be37-4a88-40e8-a93f-2f87915b4764', protocol='range'}
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Notifying assignor about the new Assignment(partitions=[tweet-operation-0])
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Adding newly assigned partitions: tweet-operation-0
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-spring-boot-api-consumer-1, groupId=spring-boot-api-consumer] Setting offset for partition tweet-operation-0 to the committed offset FetchPosition{offset=13, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ambau001025:9092 (id: 0 rack: null)], epoch=0}}
""2022-09-02 15:18:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - spring-boot-api-consumer: partitions assigned: [tweet-operation-0]
""2022-09-02 15:19:56 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2022-09-02 15:19:56 [http-nio-8081-exec-1] INFO  c.t.controllers.TweetController - Getting a tweet of ID 943
""2022-09-02 15:19:56 [http-nio-8081-exec-1] INFO  com.tweetapp.services.TweetService - Getting a tweet by id: 943 - by TweetService
""2022-09-02 15:19:56 [http-nio-8081-exec-1] INFO  org.mongodb.driver.connection - Opened connection [connectionId{localValue:7, serverValue:222297}] to cluster0-shard-00-02.drrxc.mongodb.net:27017
""2022-09-02 15:19:57 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:19:57 [http-nio-8081-exec-2] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:19:57 [http-nio-8081-exec-3] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:19:57 [http-nio-8081-exec-3] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:20:04 [http-nio-8081-exec-4] INFO  c.t.controllers.TweetController - Creating tweet by bryan123
""2022-09-02 15:20:04 [http-nio-8081-exec-4] INFO  com.tweetapp.services.TweetService - Creating a tweet: 17397 - by TweetService
""2022-09-02 15:20:04 [http-nio-8081-exec-5] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:20:04 [http-nio-8081-exec-5] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:20:04 [http-nio-8081-exec-6] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:20:04 [http-nio-8081-exec-6] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:20:07 [http-nio-8081-exec-7] INFO  c.t.controllers.TweetController - Getting a tweet of ID 17397
""2022-09-02 15:20:07 [http-nio-8081-exec-7] INFO  com.tweetapp.services.TweetService - Getting a tweet by id: 17397 - by TweetService
""2022-09-02 15:20:09 [http-nio-8081-exec-9] INFO  c.t.controllers.TweetController - Deleting tweet: 17397
""2022-09-02 15:20:09 [http-nio-8081-exec-9] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

""2022-09-02 15:20:09 [http-nio-8081-exec-9] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
""2022-09-02 15:20:09 [http-nio-8081-exec-9] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
""2022-09-02 15:20:09 [http-nio-8081-exec-9] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
""2022-09-02 15:20:09 [http-nio-8081-exec-9] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1662096009291
""2022-09-02 15:20:09 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition tweet-operation-0 to 0 since the associated topicId changed from null to xH8WUpNUSvK37nXmH5zmYw
""2022-09-02 15:20:09 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: EF9LG09OQGKxRhgXBSEPSA
""2022-09-02 15:20:09 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1008 with epoch 0
""2022-09-02 15:20:09 [http-nio-8081-exec-9] INFO  com.tweetapp.services.TweetService - Deleting a tweet of id: 17397
""2022-09-02 15:20:09 [http-nio-8081-exec-10] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:20:09 [http-nio-8081-exec-10] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:20:09 [http-nio-8081-exec-1] INFO  c.t.controllers.TweetController - Getting all tweets from bryan123
""2022-09-02 15:20:09 [http-nio-8081-exec-1] INFO  com.tweetapp.services.TweetService - Getting all tweets from user: bryan123 - by TweetService
""2022-09-02 15:20:09 [kafka-producer-network-thread | producer-1] INFO  com.tweetapp.producer.Producer - Sent message successfully
""2022-09-02 15:20:20 [http-nio-8081-exec-2] INFO  c.t.controllers.TweetController - Getting all tweets from database
""2022-09-02 15:20:20 [http-nio-8081-exec-2] INFO  com.tweetapp.services.TweetService - Getting all tweets from repository - by TweetService
"